apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capz-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.8
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: azureclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capz-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureCluster
    listKind: AzureClusterList
    plural: azureclusters
    singular: azurecluster
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: AzureCluster is the Schema for the azureclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureClusterSpec defines the desired state of AzureCluster
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to Azure
                  resources managed by the Azure provider, in addition to the ones
                  added by default.
                type: object
              location:
                type: string
              networkSpec:
                description: NetworkSpec encapsulates all things related to Azure
                  network.
                properties:
                  subnets:
                    description: Subnets is the configuration for the control-plane
                      subnet and the node subnet.
                    items:
                      description: SubnetSpec configures an Azure subnet.
                      properties:
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when
                            the provider creates a managed Vnet.
                          type: string
                        id:
                          description: ID defines a unique identifier to reference
                            this resource.
                          type: string
                        internalLBIPAddress:
                          description: InternalLBIPAddress is the IP address that
                            will be used as the internal LB private IP. For the control
                            plane subnet only.
                          type: string
                        name:
                          description: Name defines a name for the subnet resource.
                          type: string
                        role:
                          description: Role defines the subnet role (eg. Node, ControlPlane)
                          type: string
                        securityGroup:
                          description: SecurityGroup defines the NSG (network security
                            group) that should be attached to this subnet.
                          properties:
                            id:
                              type: string
                            ingressRule:
                              description: IngressRules is a slice of Azure ingress
                                rules for security groups.
                              items:
                                description: IngressRule defines an Azure ingress
                                  rule for security groups.
                                properties:
                                  description:
                                    type: string
                                  destination:
                                    description: Destination - The destination address
                                      prefix. CIDR or destination IP range. Asterix
                                      '*' can also be used to match all source IPs.
                                      Default tags such as 'VirtualNetwork', 'AzureLoadBalancer'
                                      and 'Internet' can also be used.
                                    type: string
                                  destinationPorts:
                                    description: DestinationPorts - The destination
                                      port or range. Integer or range between 0 and
                                      65535. Asterix '*' can also be used to match
                                      all ports.
                                    type: string
                                  protocol:
                                    description: SecurityGroupProtocol defines the
                                      protocol type for a security group rule.
                                    type: string
                                  source:
                                    description: Source - The CIDR or source IP range.
                                      Asterix '*' can also be used to match all source
                                      IPs. Default tags such as 'VirtualNetwork',
                                      'AzureLoadBalancer' and 'Internet' can also
                                      be used. If this is an ingress rule, specifies
                                      where network traffic originates from.
                                    type: string
                                  sourcePorts:
                                    description: SourcePorts - The source port or
                                      range. Integer or range between 0 and 65535.
                                      Asterix '*' can also be used to match all ports.
                                    type: string
                                required:
                                - description
                                - protocol
                                type: object
                              type: array
                            name:
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              description: Tags defines a map of tags.
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  vnet:
                    description: Vnet is the configuration for the Azure virtual network.
                    properties:
                      cidrBlock:
                        description: CidrBlock is the CIDR block to be used when the
                          provider creates a managed virtual network.
                        type: string
                      id:
                        description: ID is the identifier of the virtual network this
                          provider should use to create resources.
                        type: string
                      name:
                        description: Name defines a name for the virtual network resource.
                        type: string
                      resourceGroup:
                        description: ResourceGroup is the name of the resource group
                          of the existing virtual network or the resource group where
                          a managed virtual network should be created.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a collection of tags describing the resource.
                        type: object
                    required:
                    - name
                    type: object
                type: object
              resourceGroup:
                type: string
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: AzureClusterStatus defines the observed state of AzureCluster
            properties:
              apiEndpoints:
                description: APIEndpoints represents the endpoints to communicate
                  with the control plane.
                items:
                  description: APIEndpoint represents a reachable Kubernetes API endpoint.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                type: array
              bastion:
                description: VM describes an Azure virtual machine.
                properties:
                  addresses:
                    description: Addresses contains the Azure instance associated
                      addresses.
                    items:
                      description: NodeAddress contains information for the node's
                        address.
                      properties:
                        address:
                          description: The node address.
                          type: string
                        type:
                          description: Node address type, one of Hostname, ExternalIP
                            or InternalIP.
                          type: string
                      required:
                      - address
                      - type
                      type: object
                    type: array
                  availabilityZone:
                    type: string
                  id:
                    type: string
                  identity:
                    description: VMIdentity defines the identity of the virtual machine,
                      if configured.
                    type: string
                  image:
                    description: Storage profile
                    properties:
                      gallery:
                        type: string
                      id:
                        type: string
                      name:
                        type: string
                      offer:
                        type: string
                      publisher:
                        type: string
                      resourceGroup:
                        type: string
                      sku:
                        type: string
                      subscriptionID:
                        type: string
                      version:
                        type: string
                    type: object
                  name:
                    type: string
                  osDisk:
                    properties:
                      diskSizeGB:
                        format: int32
                        type: integer
                      managedDisk:
                        properties:
                          storageAccountType:
                            type: string
                        required:
                        - storageAccountType
                        type: object
                      osType:
                        type: string
                    required:
                    - diskSizeGB
                    - managedDisk
                    - osType
                    type: object
                  startupScript:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags defines a map of tags.
                    type: object
                  vmSize:
                    description: Hardware profile
                    type: string
                  vmState:
                    description: State - The provisioning state, which only appears
                      in the response.
                    type: string
                type: object
              network:
                description: Network encapsulates Azure networking resources.
                properties:
                  apiServerIp:
                    description: APIServerIP is the Kubernetes API server public IP
                      address.
                    properties:
                      dnsName:
                        type: string
                      id:
                        type: string
                      ipAddress:
                        type: string
                      name:
                        type: string
                    type: object
                  apiServerLb:
                    description: APIServerLB is the Kubernetes API server load balancer.
                    properties:
                      backendPool:
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                        type: object
                      frontendIpConfig:
                        type: object
                      id:
                        type: string
                      name:
                        type: string
                      sku:
                        description: LoadBalancerSKU enumerates the values for load
                          balancer sku name.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags defines a map of tags.
                        type: object
                    type: object
                  securityGroups:
                    additionalProperties:
                      description: SecurityGroup defines an Azure security group.
                      properties:
                        id:
                          type: string
                        ingressRule:
                          description: IngressRules is a slice of Azure ingress rules
                            for security groups.
                          items:
                            description: IngressRule defines an Azure ingress rule
                              for security groups.
                            properties:
                              description:
                                type: string
                              destination:
                                description: Destination - The destination address
                                  prefix. CIDR or destination IP range. Asterix '*'
                                  can also be used to match all source IPs. Default
                                  tags such as 'VirtualNetwork', 'AzureLoadBalancer'
                                  and 'Internet' can also be used.
                                type: string
                              destinationPorts:
                                description: DestinationPorts - The destination port
                                  or range. Integer or range between 0 and 65535.
                                  Asterix '*' can also be used to match all ports.
                                type: string
                              protocol:
                                description: SecurityGroupProtocol defines the protocol
                                  type for a security group rule.
                                type: string
                              source:
                                description: Source - The CIDR or source IP range.
                                  Asterix '*' can also be used to match all source
                                  IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer'
                                  and 'Internet' can also be used. If this is an ingress
                                  rule, specifies where network traffic originates
                                  from.
                                type: string
                              sourcePorts:
                                description: SourcePorts - The source port or range.
                                  Integer or range between 0 and 65535. Asterix '*'
                                  can also be used to match all ports.
                                type: string
                            required:
                            - description
                            - protocol
                            type: object
                          type: array
                        name:
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags defines a map of tags.
                          type: object
                      type: object
                    description: SecurityGroups is a map from the role/kind of the
                      security group to its unique name, if any.
                    type: object
                type: object
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster to which this AzureCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - jsonPath: .spec.resourceGroup
      name: Resource Group
      priority: 1
      type: string
    - jsonPath: .spec.location
      name: Location
      priority: 1
      type: string
    - description: Control Plane Endpoint
      jsonPath: .spec.controlPlaneEndpoint.host
      name: Endpoint
      priority: 1
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AzureCluster is the Schema for the azureclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureClusterSpec defines the desired state of AzureCluster
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to Azure
                  resources managed by the Azure provider, in addition to the ones
                  added by default.
                type: object
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              location:
                type: string
              networkSpec:
                description: NetworkSpec encapsulates all things related to Azure
                  network.
                properties:
                  subnets:
                    description: Subnets is the configuration for the control-plane
                      subnet and the node subnet.
                    items:
                      description: SubnetSpec configures an Azure subnet.
                      properties:
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when
                            the provider creates a managed Vnet.
                          type: string
                        id:
                          description: ID defines a unique identifier to reference
                            this resource.
                          type: string
                        internalLBIPAddress:
                          description: InternalLBIPAddress is the IP address that
                            will be used as the internal LB private IP. For the control
                            plane subnet only.
                          type: string
                        name:
                          description: Name defines a name for the subnet resource.
                          type: string
                        role:
                          description: Role defines the subnet role (eg. Node, ControlPlane)
                          type: string
                        securityGroup:
                          description: SecurityGroup defines the NSG (network security
                            group) that should be attached to this subnet.
                          properties:
                            id:
                              type: string
                            ingressRule:
                              description: IngressRules is a slice of Azure ingress
                                rules for security groups.
                              items:
                                description: IngressRule defines an Azure ingress
                                  rule for security groups.
                                properties:
                                  description:
                                    type: string
                                  destination:
                                    description: Destination - The destination address
                                      prefix. CIDR or destination IP range. Asterix
                                      '*' can also be used to match all source IPs.
                                      Default tags such as 'VirtualNetwork', 'AzureLoadBalancer'
                                      and 'Internet' can also be used.
                                    type: string
                                  destinationPorts:
                                    description: DestinationPorts - The destination
                                      port or range. Integer or range between 0 and
                                      65535. Asterix '*' can also be used to match
                                      all ports.
                                    type: string
                                  protocol:
                                    description: SecurityGroupProtocol defines the
                                      protocol type for a security group rule.
                                    type: string
                                  source:
                                    description: Source - The CIDR or source IP range.
                                      Asterix '*' can also be used to match all source
                                      IPs. Default tags such as 'VirtualNetwork',
                                      'AzureLoadBalancer' and 'Internet' can also
                                      be used. If this is an ingress rule, specifies
                                      where network traffic originates from.
                                    type: string
                                  sourcePorts:
                                    description: SourcePorts - The source port or
                                      range. Integer or range between 0 and 65535.
                                      Asterix '*' can also be used to match all ports.
                                    type: string
                                required:
                                - description
                                - protocol
                                type: object
                              type: array
                            name:
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              description: Tags defines a map of tags.
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  vnet:
                    description: Vnet is the configuration for the Azure virtual network.
                    properties:
                      cidrBlock:
                        description: CidrBlock is the CIDR block to be used when the
                          provider creates a managed virtual network.
                        type: string
                      id:
                        description: ID is the identifier of the virtual network this
                          provider should use to create resources.
                        type: string
                      name:
                        description: Name defines a name for the virtual network resource.
                        type: string
                      resourceGroup:
                        description: ResourceGroup is the name of the resource group
                          of the existing virtual network or the resource group where
                          a managed virtual network should be created.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a collection of tags describing the resource.
                        type: object
                    required:
                    - name
                    type: object
                type: object
              resourceGroup:
                type: string
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: AzureClusterStatus defines the observed state of AzureCluster
            properties:
              bastion:
                description: VM describes an Azure virtual machine.
                properties:
                  addresses:
                    description: Addresses contains the Azure instance associated
                      addresses.
                    items:
                      description: NodeAddress contains information for the node's
                        address.
                      properties:
                        address:
                          description: The node address.
                          type: string
                        type:
                          description: Node address type, one of Hostname, ExternalIP
                            or InternalIP.
                          type: string
                      required:
                      - address
                      - type
                      type: object
                    type: array
                  availabilityZone:
                    type: string
                  id:
                    type: string
                  identity:
                    description: VMIdentity defines the identity of the virtual machine,
                      if configured.
                    type: string
                  image:
                    description: Storage profile
                    properties:
                      id:
                        description: ID specifies an image to use by ID
                        type: string
                      marketplace:
                        description: Marketplace specifies an image to use from the
                          Azure Marketplace
                        properties:
                          offer:
                            description: Offer specifies the name of a group of related
                              images created by the publisher. For example, UbuntuServer,
                              WindowsServer
                            minLength: 1
                            type: string
                          publisher:
                            description: Publisher is the name of the organization
                              that created the image
                            minLength: 1
                            type: string
                          sku:
                            description: SKU specifies an instance of an offer, such
                              as a major release of a distribution. For example, 18.04-LTS,
                              2019-Datacenter
                            minLength: 1
                            type: string
                          version:
                            description: Version specifies the version of an image
                              sku. The allowed formats are Major.Minor.Build or 'latest'.
                              Major, Minor, and Build are decimal numbers. Specify
                              'latest' to use the latest version of an image available
                              at deploy time. Even if you use 'latest', the VM image
                              will not automatically update after deploy time even
                              if a new version becomes available.
                            minLength: 1
                            type: string
                        required:
                        - offer
                        - publisher
                        - sku
                        - version
                        type: object
                      sharedGallery:
                        description: SharedGallery specifies an image to use from
                          an Azure Shared Image Gallery
                        properties:
                          gallery:
                            description: Gallery specifies the name of the shared
                              image gallery that contains the image
                            minLength: 1
                            type: string
                          name:
                            description: Name is the name of the image
                            minLength: 1
                            type: string
                          resourceGroup:
                            description: ResourceGroup specifies the resource group
                              containing the shared image gallery
                            minLength: 1
                            type: string
                          subscriptionID:
                            description: SubscriptionID is the identifier of the subscription
                              that contains the shared image gallery
                            minLength: 1
                            type: string
                          version:
                            description: Version specifies the version of the marketplace
                              image. The allowed formats are Major.Minor.Build or
                              'latest'. Major, Minor, and Build are decimal numbers.
                              Specify 'latest' to use the latest version of an image
                              available at deploy time. Even if you use 'latest',
                              the VM image will not automatically update after deploy
                              time even if a new version becomes available.
                            minLength: 1
                            type: string
                        required:
                        - gallery
                        - name
                        - resourceGroup
                        - subscriptionID
                        - version
                        type: object
                    type: object
                  name:
                    type: string
                  osDisk:
                    properties:
                      diskSizeGB:
                        format: int32
                        type: integer
                      managedDisk:
                        properties:
                          storageAccountType:
                            type: string
                        required:
                        - storageAccountType
                        type: object
                      osType:
                        type: string
                    required:
                    - diskSizeGB
                    - managedDisk
                    - osType
                    type: object
                  startupScript:
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags defines a map of tags.
                    type: object
                  vmSize:
                    description: Hardware profile
                    type: string
                  vmState:
                    description: State - The provisioning state, which only appears
                      in the response.
                    type: string
                type: object
              network:
                description: Network encapsulates Azure networking resources.
                properties:
                  apiServerIp:
                    description: APIServerIP is the Kubernetes API server public IP
                      address.
                    properties:
                      dnsName:
                        type: string
                      id:
                        type: string
                      ipAddress:
                        type: string
                      name:
                        type: string
                    type: object
                  apiServerLb:
                    description: APIServerLB is the Kubernetes API server load balancer.
                    properties:
                      backendPool:
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                        type: object
                      frontendIpConfig:
                        type: object
                      id:
                        type: string
                      name:
                        type: string
                      sku:
                        description: LoadBalancerSKU enumerates the values for load
                          balancer sku name.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags defines a map of tags.
                        type: object
                    type: object
                  securityGroups:
                    additionalProperties:
                      description: SecurityGroup defines an Azure security group.
                      properties:
                        id:
                          type: string
                        ingressRule:
                          description: IngressRules is a slice of Azure ingress rules
                            for security groups.
                          items:
                            description: IngressRule defines an Azure ingress rule
                              for security groups.
                            properties:
                              description:
                                type: string
                              destination:
                                description: Destination - The destination address
                                  prefix. CIDR or destination IP range. Asterix '*'
                                  can also be used to match all source IPs. Default
                                  tags such as 'VirtualNetwork', 'AzureLoadBalancer'
                                  and 'Internet' can also be used.
                                type: string
                              destinationPorts:
                                description: DestinationPorts - The destination port
                                  or range. Integer or range between 0 and 65535.
                                  Asterix '*' can also be used to match all ports.
                                type: string
                              protocol:
                                description: SecurityGroupProtocol defines the protocol
                                  type for a security group rule.
                                type: string
                              source:
                                description: Source - The CIDR or source IP range.
                                  Asterix '*' can also be used to match all source
                                  IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer'
                                  and 'Internet' can also be used. If this is an ingress
                                  rule, specifies where network traffic originates
                                  from.
                                type: string
                              sourcePorts:
                                description: SourcePorts - The source port or range.
                                  Integer or range between 0 and 65535. Asterix '*'
                                  can also be used to match all ports.
                                type: string
                            required:
                            - description
                            - protocol
                            type: object
                          type: array
                        name:
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags defines a map of tags.
                          type: object
                      type: object
                    description: SecurityGroups is a map from the role/kind of the
                      security group to its unique name, if any.
                    type: object
                type: object
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capz-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.8
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: azuremachines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capz-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureMachine
    listKind: AzureMachineList
    plural: azuremachines
    singular: azuremachine
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: AzureMachine is the Schema for the azuremachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachineSpec defines the desired state of AzureMachine
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to an
                  instance, in addition to the ones added by default by the Azure
                  provider. If both the AzureCluster and the AzureMachine specify
                  the same tag name with different values, the AzureMachine's value
                  takes precedence.
                type: object
              allocatePublicIP:
                description: AllocatePublicIP allows the ability to create dynamic
                  public ips for machines where this value is true.
                type: boolean
              availabilityZone:
                properties:
                  enabled:
                    type: boolean
                  id:
                    type: string
                type: object
              image:
                description: 'Image defines information about the image to use for
                  VM creation. There are three ways to specify an image: by ID, by
                  publisher, or by Shared Image Gallery. If specifying an image by
                  ID, only the ID field needs to be set. If specifying an image by
                  publisher, the Publisher, Offer, SKU, and Version fields must be
                  set. If specifying an image from a Shared Image Gallery, the SubscriptionID,
                  ResourceGroup, Gallery, Name, and Version fields must be set.'
                properties:
                  gallery:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  offer:
                    type: string
                  publisher:
                    type: string
                  resourceGroup:
                    type: string
                  sku:
                    type: string
                  subscriptionID:
                    type: string
                  version:
                    type: string
                type: object
              location:
                type: string
              osDisk:
                properties:
                  diskSizeGB:
                    format: int32
                    type: integer
                  managedDisk:
                    properties:
                      storageAccountType:
                        type: string
                    required:
                    - storageAccountType
                    type: object
                  osType:
                    type: string
                required:
                - diskSizeGB
                - managedDisk
                - osType
                type: object
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              sshPublicKey:
                type: string
              vmSize:
                type: string
            required:
            - location
            - osDisk
            - sshPublicKey
            - vmSize
            type: object
          status:
            description: AzureMachineStatus defines the observed state of AzureMachine
            properties:
              addresses:
                description: Addresses contains the Azure instance associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              errorMessage:
                description: "ErrorMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              errorReason:
                description: "ErrorReason will be set in the event that there is a
                  terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              vmState:
                description: VMState is the provisioning state of the Azure virtual
                  machine.
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: AzureMachine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Azure VM provisioning state
      jsonPath: .status.vmState
      name: State
      type: string
    - description: Cluster to which this AzureMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      priority: 1
      type: string
    - description: Machine object to which this AzureMachine belongs
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      priority: 1
      type: string
    - description: Azure VM ID
      jsonPath: .spec.providerID
      name: VM ID
      priority: 1
      type: string
    - description: Azure VM Size
      jsonPath: .spec.vmSize
      name: VM Size
      priority: 1
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AzureMachine is the Schema for the azuremachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachineSpec defines the desired state of AzureMachine
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to an
                  instance, in addition to the ones added by default by the Azure
                  provider. If both the AzureCluster and the AzureMachine specify
                  the same tag name with different values, the AzureMachine's value
                  takes precedence.
                type: object
              allocatePublicIP:
                description: AllocatePublicIP allows the ability to create dynamic
                  public ips for machines where this value is true.
                type: boolean
              availabilityZone:
                properties:
                  enabled:
                    type: boolean
                  id:
                    type: string
                type: object
              image:
                description: Image is used to provide details of an image to use during
                  VM creation. If image details are omitted the image will default
                  the Azure Marketplace "capi" offer, which is based on Ubuntu.
                properties:
                  id:
                    description: ID specifies an image to use by ID
                    type: string
                  marketplace:
                    description: Marketplace specifies an image to use from the Azure
                      Marketplace
                    properties:
                      offer:
                        description: Offer specifies the name of a group of related
                          images created by the publisher. For example, UbuntuServer,
                          WindowsServer
                        minLength: 1
                        type: string
                      publisher:
                        description: Publisher is the name of the organization that
                          created the image
                        minLength: 1
                        type: string
                      sku:
                        description: SKU specifies an instance of an offer, such as
                          a major release of a distribution. For example, 18.04-LTS,
                          2019-Datacenter
                        minLength: 1
                        type: string
                      version:
                        description: Version specifies the version of an image sku.
                          The allowed formats are Major.Minor.Build or 'latest'. Major,
                          Minor, and Build are decimal numbers. Specify 'latest' to
                          use the latest version of an image available at deploy time.
                          Even if you use 'latest', the VM image will not automatically
                          update after deploy time even if a new version becomes available.
                        minLength: 1
                        type: string
                    required:
                    - offer
                    - publisher
                    - sku
                    - version
                    type: object
                  sharedGallery:
                    description: SharedGallery specifies an image to use from an Azure
                      Shared Image Gallery
                    properties:
                      gallery:
                        description: Gallery specifies the name of the shared image
                          gallery that contains the image
                        minLength: 1
                        type: string
                      name:
                        description: Name is the name of the image
                        minLength: 1
                        type: string
                      resourceGroup:
                        description: ResourceGroup specifies the resource group containing
                          the shared image gallery
                        minLength: 1
                        type: string
                      subscriptionID:
                        description: SubscriptionID is the identifier of the subscription
                          that contains the shared image gallery
                        minLength: 1
                        type: string
                      version:
                        description: Version specifies the version of the marketplace
                          image. The allowed formats are Major.Minor.Build or 'latest'.
                          Major, Minor, and Build are decimal numbers. Specify 'latest'
                          to use the latest version of an image available at deploy
                          time. Even if you use 'latest', the VM image will not automatically
                          update after deploy time even if a new version becomes available.
                        minLength: 1
                        type: string
                    required:
                    - gallery
                    - name
                    - resourceGroup
                    - subscriptionID
                    - version
                    type: object
                type: object
              location:
                type: string
              osDisk:
                properties:
                  diskSizeGB:
                    format: int32
                    type: integer
                  managedDisk:
                    properties:
                      storageAccountType:
                        type: string
                    required:
                    - storageAccountType
                    type: object
                  osType:
                    type: string
                required:
                - diskSizeGB
                - managedDisk
                - osType
                type: object
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              sshPublicKey:
                type: string
              vmSize:
                type: string
            required:
            - location
            - osDisk
            - sshPublicKey
            - vmSize
            type: object
          status:
            description: AzureMachineStatus defines the observed state of AzureMachine
            properties:
              addresses:
                description: Addresses contains the Azure instance associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP
                        or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              failureMessage:
                description: "ErrorMessage will be set in the event that there is
                  a terminal problem reconciling the Machine and will contain a more
                  verbose string suitable for logging and human consumption. \n This
                  field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the Machine's spec or the configuration of the controller,
                  and that manual intervention is required. Examples of terminal errors
                  would be invalid combinations of settings in the spec, values that
                  are unsupported by the controller, or the responsible controller
                  itself being critically misconfigured. \n Any transient errors that
                  occur during the reconciliation of Machines can be added as events
                  to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "ErrorReason will be set in the event that there is a
                  terminal problem reconciling the Machine and will contain a succinct
                  value suitable for machine interpretation. \n This field should
                  not be set for transitive errors that a controller faces that are
                  expected to be fixed automatically over time (like service outages),
                  but instead indicate that something is fundamentally wrong with
                  the Machine's spec or the configuration of the controller, and that
                  manual intervention is required. Examples of terminal errors would
                  be invalid combinations of settings in the spec, values that are
                  unsupported by the controller, or the responsible controller itself
                  being critically misconfigured. \n Any transient errors that occur
                  during the reconciliation of Machines can be added as events to
                  the Machine object and/or logged in the controller's output."
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              vmState:
                description: VMState is the provisioning state of the Azure virtual
                  machine.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capz-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.8
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: azuremachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capz-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureMachineTemplate
    listKind: AzureMachineTemplateList
    plural: azuremachinetemplates
    singular: azuremachinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: AzureMachineTemplate is the Schema for the azuremachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachineTemplateSpec defines the desired state of AzureMachineTemplate
            properties:
              template:
                description: AzureMachineTemplateResource describes the data needed
                  to create am AzureMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: AdditionalTags is an optional set of tags to
                          add to an instance, in addition to the ones added by default
                          by the Azure provider. If both the AzureCluster and the
                          AzureMachine specify the same tag name with different values,
                          the AzureMachine's value takes precedence.
                        type: object
                      allocatePublicIP:
                        description: AllocatePublicIP allows the ability to create
                          dynamic public ips for machines where this value is true.
                        type: boolean
                      availabilityZone:
                        properties:
                          enabled:
                            type: boolean
                          id:
                            type: string
                        type: object
                      image:
                        description: 'Image defines information about the image to
                          use for VM creation. There are three ways to specify an
                          image: by ID, by publisher, or by Shared Image Gallery.
                          If specifying an image by ID, only the ID field needs to
                          be set. If specifying an image by publisher, the Publisher,
                          Offer, SKU, and Version fields must be set. If specifying
                          an image from a Shared Image Gallery, the SubscriptionID,
                          ResourceGroup, Gallery, Name, and Version fields must be
                          set.'
                        properties:
                          gallery:
                            type: string
                          id:
                            type: string
                          name:
                            type: string
                          offer:
                            type: string
                          publisher:
                            type: string
                          resourceGroup:
                            type: string
                          sku:
                            type: string
                          subscriptionID:
                            type: string
                          version:
                            type: string
                        type: object
                      location:
                        type: string
                      osDisk:
                        properties:
                          diskSizeGB:
                            format: int32
                            type: integer
                          managedDisk:
                            properties:
                              storageAccountType:
                                type: string
                            required:
                            - storageAccountType
                            type: object
                          osType:
                            type: string
                        required:
                        - diskSizeGB
                        - managedDisk
                        - osType
                        type: object
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      sshPublicKey:
                        type: string
                      vmSize:
                        type: string
                    required:
                    - location
                    - osDisk
                    - sshPublicKey
                    - vmSize
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AzureMachineTemplate is the Schema for the azuremachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachineTemplateSpec defines the desired state of AzureMachineTemplate
            properties:
              template:
                description: AzureMachineTemplateResource describes the data needed
                  to create an AzureMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: AdditionalTags is an optional set of tags to
                          add to an instance, in addition to the ones added by default
                          by the Azure provider. If both the AzureCluster and the
                          AzureMachine specify the same tag name with different values,
                          the AzureMachine's value takes precedence.
                        type: object
                      allocatePublicIP:
                        description: AllocatePublicIP allows the ability to create
                          dynamic public ips for machines where this value is true.
                        type: boolean
                      availabilityZone:
                        properties:
                          enabled:
                            type: boolean
                          id:
                            type: string
                        type: object
                      image:
                        description: Image is used to provide details of an image
                          to use during VM creation. If image details are omitted
                          the image will default the Azure Marketplace "capi" offer,
                          which is based on Ubuntu.
                        properties:
                          id:
                            description: ID specifies an image to use by ID
                            type: string
                          marketplace:
                            description: Marketplace specifies an image to use from
                              the Azure Marketplace
                            properties:
                              offer:
                                description: Offer specifies the name of a group of
                                  related images created by the publisher. For example,
                                  UbuntuServer, WindowsServer
                                minLength: 1
                                type: string
                              publisher:
                                description: Publisher is the name of the organization
                                  that created the image
                                minLength: 1
                                type: string
                              sku:
                                description: SKU specifies an instance of an offer,
                                  such as a major release of a distribution. For example,
                                  18.04-LTS, 2019-Datacenter
                                minLength: 1
                                type: string
                              version:
                                description: Version specifies the version of an image
                                  sku. The allowed formats are Major.Minor.Build or
                                  'latest'. Major, Minor, and Build are decimal numbers.
                                  Specify 'latest' to use the latest version of an
                                  image available at deploy time. Even if you use
                                  'latest', the VM image will not automatically update
                                  after deploy time even if a new version becomes
                                  available.
                                minLength: 1
                                type: string
                            required:
                            - offer
                            - publisher
                            - sku
                            - version
                            type: object
                          sharedGallery:
                            description: SharedGallery specifies an image to use from
                              an Azure Shared Image Gallery
                            properties:
                              gallery:
                                description: Gallery specifies the name of the shared
                                  image gallery that contains the image
                                minLength: 1
                                type: string
                              name:
                                description: Name is the name of the image
                                minLength: 1
                                type: string
                              resourceGroup:
                                description: ResourceGroup specifies the resource
                                  group containing the shared image gallery
                                minLength: 1
                                type: string
                              subscriptionID:
                                description: SubscriptionID is the identifier of the
                                  subscription that contains the shared image gallery
                                minLength: 1
                                type: string
                              version:
                                description: Version specifies the version of the
                                  marketplace image. The allowed formats are Major.Minor.Build
                                  or 'latest'. Major, Minor, and Build are decimal
                                  numbers. Specify 'latest' to use the latest version
                                  of an image available at deploy time. Even if you
                                  use 'latest', the VM image will not automatically
                                  update after deploy time even if a new version becomes
                                  available.
                                minLength: 1
                                type: string
                            required:
                            - gallery
                            - name
                            - resourceGroup
                            - subscriptionID
                            - version
                            type: object
                        type: object
                      location:
                        type: string
                      osDisk:
                        properties:
                          diskSizeGB:
                            format: int32
                            type: integer
                          managedDisk:
                            properties:
                              storageAccountType:
                                type: string
                            required:
                            - storageAccountType
                            type: object
                          osType:
                            type: string
                        required:
                        - diskSizeGB
                        - managedDisk
                        - osType
                        type: object
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      sshPublicKey:
                        type: string
                      vmSize:
                        type: string
                    required:
                    - location
                    - osDisk
                    - sshPublicKey
                    - vmSize
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-webhook-service
  namespace: capi-webhook-system
spec:
  ports:
  - port: 443
    targetPort: webhook-server
  selector:
    cluster.x-k8s.io/provider: infrastructure-azure
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    control-plane: capz-controller-manager
  name: capz-controller-manager
  namespace: capi-webhook-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-azure
      control-plane: capz-controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-azure
        control-plane: capz-controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --webhook-port=9443
        image: gcr.io/k8s-staging-cluster-api-azure/cluster-api-azure-controller:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capz-webhook-service-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-serving-cert
  namespace: capi-webhook-system
spec:
  dnsNames:
  - capz-webhook-service.capi-webhook-system.svc
  - capz-webhook-service.capi-webhook-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capz-selfsigned-issuer
  secretName: capz-webhook-service-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-selfsigned-issuer
  namespace: capi-webhook-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capz-serving-cert
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-validating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: capz-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-azuremachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.azuremachine.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremachine
