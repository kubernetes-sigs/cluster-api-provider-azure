apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cloud-provider: ${CLOUD_PROVIDER_AZURE_LABEL:=azure}
    cni: calico
    cni-windows: ${CLUSTER_NAME}-calico
    containerd-logger: enabled
    csi-proxy: enabled
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
  topology:
    class: ${CLUSTER_CLASS_NAME}
    controlPlane:
      replicas: ${CONTROL_PLANE_MACHINE_COUNT:=1}
    variables:
    - name: subscriptionID
      value: ${AZURE_SUBSCRIPTION_ID}
    - name: controlPlaneMachineType
      value: ${AZURE_CONTROL_PLANE_MACHINE_TYPE:-""}
    - name: workerMachineType
      value: ${AZURE_NODE_MACHINE_TYPE:-""}
    - name: workerMachineTypeWin
      value: ${AZURE_NODE_MACHINE_TYPE:-""}
    - name: sshPublicKey
      value: ${AZURE_SSH_PUBLIC_KEY_B64:-""}
    - name: buildProvenance
      value: ${BUILD_PROVENANCE:-""}
    - name: timestamp
      value: ${TIMESTAMP:-""}
    - name: jobName
      value: ${JOB_NAME:-""}
    - name: clusterIdentityRef
      value: ${CLUSTER_IDENTITY_NAME}
    - name: location
      value: ${AZURE_LOCATION}
    - name: k8sFeatureGates
      value: ${K8S_FEATURE_GATES:-""}
    - name: logLevel
      value: "4"
    version: ${KUBERNETES_VERSION}
    workers:
      machineDeployments:
      - class: ${CLUSTER_NAME}-worker
        name: md-0
        replicas: ${WORKER_MACHINE_COUNT}
      - class: ${CLUSTER_NAME}-worker-win
        name: md-win
        replicas: ${WINDOWS_WORKER_MACHINE_COUNT:-0}
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: ${CLUSTER_NAME}-calico
  namespace: default
spec:
  clusterSelector:
    matchLabels:
      cni-windows: ${CLUSTER_NAME}-calico
  resources:
  - kind: ConfigMap
    name: cni-${CLUSTER_NAME}-calico-windows
  strategy: ApplyOnce
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: csi-proxy
  namespace: default
spec:
  clusterSelector:
    matchLabels:
      csi-proxy: enabled
  resources:
  - kind: ConfigMap
    name: csi-proxy-addon
  strategy: ApplyOnce
---
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: calico
  namespace: default
spec:
  chartName: tigera-operator
  clusterSelector:
    matchLabels:
      cni: calico
  namespace: tigera-operator
  releaseName: projectcalico
  repoURL: https://docs.tigera.io/calico/charts
  valuesTemplate: |-
    installation:
      cni:
        type: Calico
      calicoNetwork:
        bgp: Disabled
        windowsDataplane: HNS
        mtu: 1350
        ipPools:{{range $i, $cidr := .Cluster.spec.clusterNetwork.pods.cidrBlocks }}
        - cidr: {{ $cidr }}
          encapsulation: VXLAN{{end}}
      serviceCIDRs:
        - 10.96.0.0/12 # must match cluster service CIDR (this is the default)
    # when kubernetesServiceEndpoint (required for windows) is added
    # DNS configuration is needed to look up the api server name properly
    # https://github.com/projectcalico/calico/issues/9536
    dnsConfig:
      nameservers:
        - 127.0.0.53
      options:
        - name: edns0
        - name: trust-ad
    kubernetesServiceEndpoint:
      host: "{{ .Cluster.spec.controlPlaneEndpoint.host }}"
      port: "{{ .Cluster.spec.controlPlaneEndpoint.port }}"
  version: ${CALICO_VERSION}
---
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: azuredisk-csi-driver-chart
  namespace: default
spec:
  chartName: azuredisk-csi-driver
  clusterSelector:
    matchLabels:
      azuredisk-csi: "true"
  namespace: kube-system
  releaseName: azuredisk-csi-driver-oot
  repoURL: https://raw.githubusercontent.com/kubernetes-sigs/azuredisk-csi-driver/master/charts
  valuesTemplate: |-
    controller:
      replicas: 1
      runOnControlPlane: true
    windows:
      useHostProcessContainers: {{ hasKey .Cluster.metadata.labels "cni-windows" }}
---
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: cloud-provider-azure-chart
  namespace: default
spec:
  chartName: cloud-provider-azure
  clusterSelector:
    matchLabels:
      cloud-provider: azure
  releaseName: cloud-provider-azure-oot
  repoURL: https://raw.githubusercontent.com/kubernetes-sigs/cloud-provider-azure/master/helm/repo
  valuesTemplate: |
    infra:
      clusterName: {{ .Cluster.metadata.name }}
    cloudControllerManager:
      clusterCIDR: {{ .Cluster.spec.clusterNetwork.pods.cidrBlocks | join "," }}
      logVerbosity: 4
---
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: cloud-provider-azure-chart-ci
  namespace: default
spec:
  chartName: cloud-provider-azure
  clusterSelector:
    matchLabels:
      cloud-provider: azure-ci
  releaseName: cloud-provider-azure-oot
  repoURL: https://raw.githubusercontent.com/kubernetes-sigs/cloud-provider-azure/master/helm/repo
  valuesTemplate: |
    infra:
      clusterName: {{ .Cluster.metadata.name }}
    cloudControllerManager:
      cloudConfig: ${CLOUD_CONFIG:-"/etc/kubernetes/azure.json"}
      cloudConfigSecretName: ${CONFIG_SECRET_NAME:-""}
      clusterCIDR: {{ .Cluster.spec.clusterNetwork.pods.cidrBlocks | join "," }}
      imageName: "${CCM_IMAGE_NAME:-""}"
      imageRepository: "${IMAGE_REGISTRY:-""}"
      imageTag: "${IMAGE_TAG_CCM:-""}"
      logVerbosity: ${CCM_LOG_VERBOSITY:-4}
      replicas: ${CCM_COUNT:-1}
      enableDynamicReloading: ${ENABLE_DYNAMIC_RELOADING:-false}
    cloudNodeManager:
      imageName: "${CNM_IMAGE_NAME:-""}"
      imageRepository: "${IMAGE_REGISTRY:-""}"
      imageTag: "${IMAGE_TAG_CNM:-""}"
---
apiVersion: v1
data:
  proxy: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        k8s-app: kube-proxy
      name: kube-proxy-windows
      namespace: kube-system
    spec:
      selector:
        matchLabels:
          k8s-app: kube-proxy-windows
      template:
        metadata:
          labels:
            k8s-app: kube-proxy-windows
        spec:
          serviceAccountName: kube-proxy
          securityContext:
            windowsOptions:
              hostProcess: true
              runAsUserName: "NT AUTHORITY\\system"
          hostNetwork: true
          priorityClassName: system-node-critical
          containers:
          - image: sigwindowstools/kube-proxy:${KUBERNETES_VERSION/+/_}-calico-hostprocess
            args: ["$env:CONTAINER_SANDBOX_MOUNT_POINT/kube-proxy/start.ps1"]
            workingDir: "$env:CONTAINER_SANDBOX_MOUNT_POINT/kube-proxy/"
            name: kube-proxy
            env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KUBEPROXY_PATH
              valueFrom:
                configMapKeyRef:
                  name: windows-kubeproxy-ci
                  key: KUBEPROXY_PATH
                  optional: true
            volumeMounts:
            - mountPath: /var/lib/kube-proxy
              name: kube-proxy
          nodeSelector:
            kubernetes.io/os: windows
          tolerations:
          - key: CriticalAddonsOnly
            operator: Exists
          - operator: Exists
          volumes:
          - configMap:
              name: kube-proxy
            name: kube-proxy
      updateStrategy:
        type: RollingUpdate
  windows-cni: "# strictAffinity required for windows\napiVersion: crd.projectcalico.org/v1\nkind:
    IPAMConfig\nmetadata:\n  name: default\nspec:\n  autoAllocateBlocks: true\n  strictAffinity:
    true\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-static-rules\n
    \ namespace: calico-system\n  labels:\n    tier: node\n    app: calico\ndata:\n
    \ static-rules.json: |\n    {\n      \"Provider\": \"azure\",\n      \"Version\":
    \"0.1\",\n      \"Rules\": [\n        {\n          \"Name\": \"EndpointPolicy\",\n
    \         \"Rule\": {\n              \"Id\": \"wireserver\",\n              \"Type\":
    \"ACL\",\n              \"Protocol\": 6,\n              \"Action\": \"Block\",\n
    \             \"Direction\": \"Out\",\n              \"RemoteAddresses\": \"168.63.129.16/32\",\n
    \             \"RemotePorts\": \"80\",\n              \"Priority\": 200,\n              \"RuleType\":
    \"Switch\"\n            }\n          }\n      ]\n    } \n---\n"
kind: ConfigMap
metadata:
  annotations:
    note: generated
  labels:
    type: generated
  name: cni-${CLUSTER_NAME}-calico-windows
  namespace: default
---
apiVersion: v1
data:
  csi-proxy: |
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      labels:
        k8s-app: csi-proxy
      name: csi-proxy
      namespace: kube-system
    spec:
      selector:
        matchLabels:
          k8s-app: csi-proxy
      template:
        metadata:
          labels:
            k8s-app: csi-proxy
        spec:
          nodeSelector:
            "kubernetes.io/os": windows
          securityContext:
            windowsOptions:
              hostProcess: true
              runAsUserName: "NT AUTHORITY\\SYSTEM"
          hostNetwork: true
          containers:
            - name: csi-proxy
              image: ghcr.io/kubernetes-sigs/sig-windows/csi-proxy:v1.0.2
kind: ConfigMap
metadata:
  annotations:
    note: generated
  labels:
    type: generated
  name: csi-proxy-addon
  namespace: default
