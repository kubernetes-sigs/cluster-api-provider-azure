- op: add
  path: /spec/template/spec/files/-
  value:
    content: |
      $ErrorActionPreference = 'Stop'

      Stop-Service kubelet -Force

      $$binaries=@("kubeadm", "kubectl", "kubelet", "kube-proxy")
      $$ci_url="https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net/${JOB_NAME}/${KUBE_GIT_VERSION}/bin/windows/amd64"
      foreach ( $$binary in $$binaries )
      {
        echo "installing binary: $$binary ${KUBE_GIT_VERSION}"
        curl.exe --retry 10 --retry-delay 5 "$$ci_url/$$binary.exe" --output "c:/k/$$binary.exe"
      }

      $$CONTAINERD_URL="${WINDOWS_CONTAINERD_URL}"
      if($$CONTAINERD_URL -ne ""){
        Stop-Service containerd -Force
        echo "downloading containerd: $$CONTAINERD_URL"
        curl.exe --retry 10 --retry-delay 5 -L "$$CONTAINERD_URL" --output "c:/k/containerd.tar.gz"
        tar.exe -zxvf c:/k/containerd.tar.gz -C "c:/Program Files/containerd" --strip-components 1
        Start-Service containerd
      }

      # Tag it to the ci version.  The image knows how to use the copy locally with the configmap
      # that is applied at at this stage (windows-kubeproxy-ci.yaml)
      ctr.exe -n k8s.io images pull ghcr.io/kubernetes-sigs/sig-windows/kube-proxy:v1.23.1-calico-hostprocess
      ctr.exe -n k8s.io images tag ghcr.io/kubernetes-sigs/sig-windows/kube-proxy:v1.23.1-calico-hostprocess "ghcr.io/kubernetes-sigs/sig-windows/kube-proxy:${CI_VERSION/+/_}-calico-hostprocess"

      kubeadm.exe version -o=short
      kubectl.exe version --client=true --short=true
      kubelet.exe --version
      kube-proxy.exe --version
      containerd.exe --version
      containerd-shim-runhcs-v1.exe --version
    path: C:/replace-ci-binaries.ps1
    permissions: "0744"
- op: add
  path: /spec/template/spec/preKubeadmCommands/-
  value:
    powershell C:/replace-ci-binaries.ps1
