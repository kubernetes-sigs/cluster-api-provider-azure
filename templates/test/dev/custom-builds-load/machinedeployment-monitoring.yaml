apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-monitoring
  namespace: default
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: 1
  selector: {}
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: ${CLUSTER_NAME}-monitoring
      clusterName: ${CLUSTER_NAME}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureMachineTemplate
        name: ${CLUSTER_NAME}-monitoring
      version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-monitoring
  namespace: default
spec:
  template:
    spec:
      additionalTags:
        monitoring: load
      identity: UserAssigned
      image:
        marketplace:
          offer: capi
          publisher: cncf-upstream
          sku: ubuntu-2204-gen1
          version: latest
      osDisk:
        diskSizeGB: 128
        osType: Linux
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY_B64:=""}
      userAssignedIdentities:
      - providerID: /subscriptions/${AZURE_SUBSCRIPTION_ID}/resourceGroups/${CI_RG}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/${USER_IDENTITY}
      vmExtensions:
      - name: CustomScript
        protectedSettings:
          commandToExecute: |
            #!/bin/sh
            echo "This script is a no-op used for extension testing purposes ..."
            touch test_file
        publisher: Microsoft.Azure.Extensions
        version: "2.1"
      vmSize: Standard_D8s_v3
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-monitoring
  namespace: default
spec:
  template:
    spec:
      files:
      - contentFrom:
          secret:
            key: worker-node-azure.json
            name: ${CLUSTER_NAME}-monitoring-azure-json
        owner: root:root
        path: /etc/kubernetes/azure.json
        permissions: "0644"
      - content: |
          #!/bin/bash

          set -o nounset
          set -o pipefail
          set -o errexit
          [[ $(id -u) != 0 ]] && SUDO="sudo" || SUDO=""

          # Run the az login command with managed identity
          if az login --identity > /dev/null 2>&1; then
            echo "Logged in Azure with managed identity"
            echo "Use OOT credential provider"
            mkdir -p /var/lib/kubelet/credential-provider
            az storage blob download --blob-url "https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net/${AZURE_BLOB_CONTAINER_NAME}/${IMAGE_TAG_ACR_CREDENTIAL_PROVIDER}/azure-acr-credential-provider" -f /var/lib/kubelet/credential-provider/acr-credential-provider --auth-mode login
            chmod 755 /var/lib/kubelet/credential-provider/acr-credential-provider
            az storage blob download --blob-url "https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net/${AZURE_BLOB_CONTAINER_NAME}/${IMAGE_TAG_ACR_CREDENTIAL_PROVIDER}/credential-provider-config.yaml" -f /var/lib/kubelet/credential-provider-config.yaml --auth-mode login
            chmod 644 /var/lib/kubelet/credential-provider-config.yaml
          else
            echo "Use OOT credential provider"
            mkdir -p /var/lib/kubelet/credential-provider
            curl --retry 10 --retry-delay 5 -w "response status code is %{http_code}" -Lo /var/lib/kubelet/credential-provider/acr-credential-provider "https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net/${AZURE_BLOB_CONTAINER_NAME}/${IMAGE_TAG_ACR_CREDENTIAL_PROVIDER}/azure-acr-credential-provider"
            chmod 755 /var/lib/kubelet/credential-provider/acr-credential-provider
            curl --retry 10 --retry-delay 5 -w "response status code is %{http_code}" -Lo /var/lib/kubelet/credential-provider-config.yaml "https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net/${AZURE_BLOB_CONTAINER_NAME}/${IMAGE_TAG_ACR_CREDENTIAL_PROVIDER}/credential-provider-config.yaml"
            chmod 644 /var/lib/kubelet/credential-provider-config.yaml
          fi
        owner: root:root
        path: /tmp/oot-cred-provider.sh
        permissions: "0744"
      - content: |
          #!/bin/bash

          set -o nounset
          set -o pipefail
          set -o errexit

          systemctl stop kubelet
          declare -a BINARIES=("kubeadm" "kubectl" "kubelet")
          az login --identity
          for BINARY in "$${BINARIES[@]}"; do
            echo "* installing package: $${BINARY} ${KUBE_GIT_VERSION}"
            az storage blob download --blob-url "https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net/${AZURE_BLOB_CONTAINER_NAME}/${KUBE_GIT_VERSION}/bin/linux/amd64/$${BINARY}" -f "/usr/bin/$${BINARY}" --auth-mode login
          done
          systemctl restart kubelet

          echo "kubeadm version: $(kubeadm version -o=short)"
          echo "kubectl version: $(kubectl version --client=true)"
          echo "kubelet version: $(kubelet --version)"
        owner: root:root
        path: /tmp/replace-k8s-binaries.sh
        permissions: "0744"
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            image-credential-provider-bin-dir: /var/lib/kubelet/credential-provider
            image-credential-provider-config: /var/lib/kubelet/credential-provider-config.yaml
            register-with-taints: "monitoring:NoSchedule"
          name: '{{ ds.meta_data["local_hostname"] }}'
      preKubeadmCommands:
      - bash -c /tmp/oot-cred-provider.sh
      - bash -c /tmp/replace-k8s-binaries.sh
