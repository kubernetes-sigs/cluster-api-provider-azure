apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - ${AZURE_VNET_CIDR_BLOCK}
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    kind: KubeadmControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AzureCluster
    name: ${CLUSTER_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AzureCluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  location: ${AZURE_LOCATION}
  networkSpec:
    subnets:
      - name: ${AZURE_CONTROL_PLANE_SUBNET_NAME}
        role: ${AZURE_CONTROL_PLANE_SUBNET_ROLE}
    vnet:
      name: ${AZURE_CONTROL_PLANE_VNET_NAME:=${CLUSTER_NAME}-vnet}
      resourceGroup: ${AZURE_CONTROL_PLANE_VNET_RESOURCE_GROUP}
  resourceGroup: ${AZURE_RESOURCE_GROUP:=${CLUSTER_NAME}}
  subscriptionID: ${AZURE_SUBSCRIPTION_ID}
  controlPlaneEndpointIP: ${AZURE_CONTROL_PLANE_STATIC_IP_ADDRESS}
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: KubeadmControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AzureMachineTemplate
    name: ${CLUSTER_NAME}-control-plane
  kubeadmConfigSpec:
    preKubeadmCommands:    
    - sudo iptables -A INPUT -p tcp -m tcp --dport 6443 -j ACCEPT
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: external
        timeoutForControlPlane: 20m
      controllerManager:
        extraArgs:
          cloud-provider: external
      etcd:
        local:
          dataDir: /var/lib/etcddisk/etcd
    diskSetup:
      filesystems:
      - device: /dev/disk/azure/scsi1/lun0
        extraOpts:
        - -E
        - lazy_itable_init=1,lazy_journal_init=1
        filesystem: ext4
        label: etcd_disk
      - device: ephemeral0.1
        filesystem: ext4
        label: ephemeral0
        replaceFS: ntfs
      partitions:
      - device: /dev/disk/azure/scsi1/lun0
        layout: true
        overwrite: false
        tableType: gpt
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
        name: '{{ ds.meta_data["local_hostname"] }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
        name: '{{ ds.meta_data["local_hostname"] }}'
    mounts:
    - - LABEL=etcd_disk
      - /var/lib/etcddisk
    useExperimentalRetryJoin: true
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AzureMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  template:
    spec:
      networkInterfaces:
      - name: ${AZURE_CONTROL_PLANE_NIC_NAME:=""}
        vnetName: ${AZURE_CONTROL_PLANE_VNET_NAME} 
        subnetName: ${AZURE_CONTROL_PLANE_SUBNET_NAME}
        vnetResourceGroup: ${AZURE_CONTROL_PLANE_VNET_RESOURCE_GROUP}
        isPrimary: ${IS_NIC_PRIMARY}
        staticIPAddress: ${AZURE_CONTROL_PLANE_STATIC_IP_ADDRESS:=""}
      dataDisks:
      - diskSizeGB: ${AZURE_CONTROL_PLANE_DATADISK_SIZE:=256}
        lun: 0
        nameSuffix: etcddisk
      location: ${AZURE_LOCATION}
      osDisk:
        diskSizeGB: ${AZURE_CONTROL_PLANE_OSDISK_SIZE:=128}
        managedDisk:
          storageAccountType: Standard_LRS
        osType: Linux
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY_B64:=""}
      vmSize: ${AZURE_CONTROL_PLANE_MACHINE_TYPE}
      imageID: ${AZURE_IMAGE_ID}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: default
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
          name: '{{ ds.meta_data["local_hostname"] }}'
      useExperimentalRetryJoin: true