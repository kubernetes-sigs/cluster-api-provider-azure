apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: ${CLUSTER_CLASS_NAME}
  namespace: default
spec:
  controlPlane:
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureMachineTemplate
        name: ${CLUSTER_NAME}-control-plane
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: ${CLUSTER_NAME}-control-plane
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: AzureClusterTemplate
      name: ${CLUSTER_NAME}-azure-cluster
  patches:
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/kubeadmConfigSpec/clusterConfiguration/controllerManager/extraArgs/cluster-name
        valueFrom:
          variable: builtin.cluster.name
      - op: replace
        path: /spec/template/spec/kubeadmConfigSpec/files
        valueFrom:
          template: |
            - contentFrom:
                secret:
                  key: control-plane-azure.json
                  name: "{{ .builtin.controlPlane.machineTemplate.infrastructureRef.name }}-azure-json"
              owner: root:root
              path: /etc/kubernetes/azure.json
              permissions: "0644"
      selector:
        apiVersion: controlplane.cluster.x-k8s.io/v1beta1
        kind: KubeadmControlPlaneTemplate
        matchResources:
          controlPlane: true
    name: controlPlaneAzureJsonSecretName
  - definitions:
    - jsonPatches:
      - op: replace
        path: /spec/template/spec/files
        valueFrom:
          template: |
            - contentFrom:
                secret:
                  key: worker-node-azure.json
                  name: "{{ .builtin.machineDeployment.infrastructureRef.name }}-azure-json"
              owner: root:root
              path: /etc/kubernetes/azure.json
              permissions: "0644"
      selector:
        apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
        kind: KubeadmConfigTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - ${CLUSTER_NAME}-worker
    name: workerAzureJsonSecretName
  workers:
    machineDeployments:
    - class: ${CLUSTER_NAME}-worker
      template:
        bootstrap:
          ref:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
            kind: KubeadmConfigTemplate
            name: ${CLUSTER_NAME}-md-0
        infrastructure:
          ref:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: AzureMachineTemplate
            name: ${CLUSTER_NAME}-md-0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureClusterTemplate
metadata:
  name: ${CLUSTER_NAME}-azure-cluster
  namespace: default
spec:
  template:
    spec:
      identityRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureClusterIdentity
        name: ${CLUSTER_IDENTITY_NAME}
      location: ${AZURE_LOCATION}
      networkSpec:
        subnets:
        - name: control-plane-subnet
          role: control-plane
        - name: node-subnet
          natGateway:
            name: node-natgateway
          role: node
      subscriptionID: ${AZURE_SUBSCRIPTION_ID}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  template:
    spec:
      dataDisks:
      - diskSizeGB: 256
        lun: 0
        nameSuffix: etcddisk
      osDisk:
        diskSizeGB: 128
        osType: Linux
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY_B64:=""}
      vmSize: ${AZURE_CONTROL_PLANE_MACHINE_TYPE}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: default
spec:
  template:
    spec:
      osDisk:
        diskSizeGB: 128
        osType: Linux
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY_B64:=""}
      vmSize: ${AZURE_NODE_MACHINE_TYPE}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            extraArgs:
              cloud-provider: external
            timeoutForControlPlane: 20m
          controllerManager:
            extraArgs:
              allocate-node-cidrs: "false"
              cloud-provider: external
              cluster-name: ${CLUSTER_NAME}
          etcd:
            local:
              dataDir: /var/lib/etcddisk/etcd
              extraArgs:
                quota-backend-bytes: "8589934592"
        diskSetup:
          filesystems:
          - device: /dev/disk/azure/scsi1/lun0
            extraOpts:
            - -E
            - lazy_itable_init=1,lazy_journal_init=1
            filesystem: ext4
            label: etcd_disk
          - device: ephemeral0.1
            filesystem: ext4
            label: ephemeral0
            replaceFS: ntfs
          partitions:
          - device: /dev/disk/azure/scsi1/lun0
            layout: true
            overwrite: false
            tableType: gpt
        files:
        - contentFrom:
            secret:
              key: control-plane-azure.json
              name: replace_me
          owner: root:root
          path: /etc/kubernetes/azure.json
          permissions: "0644"
        initConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              azure-container-registry-config: /etc/kubernetes/azure.json
              cloud-provider: external
            name: '{{ ds.meta_data["local_hostname"] }}'
        joinConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              azure-container-registry-config: /etc/kubernetes/azure.json
              cloud-provider: external
            name: '{{ ds.meta_data["local_hostname"] }}'
        mounts:
        - - LABEL=etcd_disk
          - /var/lib/etcddisk
        postKubeadmCommands: []
        preKubeadmCommands: []
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: default
spec:
  template:
    spec:
      files:
      - contentFrom:
          secret:
            key: worker-node-azure.json
            name: replace_me
        owner: root:root
        path: /etc/kubernetes/azure.json
        permissions: "0644"
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            azure-container-registry-config: /etc/kubernetes/azure.json
            cloud-provider: external
          name: '{{ ds.meta_data["local_hostname"] }}'
      preKubeadmCommands: []
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureClusterIdentity
metadata:
  labels:
    clusterctl.cluster.x-k8s.io/move-hierarchy: "true"
  name: ${CLUSTER_IDENTITY_NAME}
  namespace: default
spec:
  allowedNamespaces: {}
  clientID: ${AZURE_CLIENT_ID}
  clientSecret:
    name: ${AZURE_CLUSTER_IDENTITY_SECRET_NAME}
    namespace: ${AZURE_CLUSTER_IDENTITY_SECRET_NAMESPACE}
  tenantID: ${AZURE_TENANT_ID}
  type: ServicePrincipal
