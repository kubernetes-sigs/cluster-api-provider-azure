
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: azuremachinepoolmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureMachinePoolMachine
    listKind: AzureMachinePoolMachineList
    plural: azuremachinepoolmachines
    shortNames:
    - ampm
    singular: azuremachinepoolmachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Kubernetes version
      jsonPath: .status.version
      name: Version
      type: string
    - description: Flag indicating infrastructure is successfully provisioned
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Azure VMSS VM provisioning state
      jsonPath: .status.provisioningState
      name: State
      type: string
    - description: Cluster to which this AzureMachinePoolMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      priority: 1
      type: string
    - description: Azure VMSS VM ID
      jsonPath: .spec.providerID
      name: VMSS VM ID
      priority: 1
      type: string
    name: v1alpha4
    schema:
      openAPIV3Schema:
        description: AzureMachinePoolMachine is the Schema for the azuremachinepoolmachines
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachinePoolMachineSpec defines the desired state of
              AzureMachinePoolMachine.
            properties:
              instanceID:
                description: InstanceID is the identification of the Machine Instance
                  within the VMSS
                type: string
              providerID:
                description: ProviderID is the identification ID of the Virtual Machine
                  Scale Set
                type: string
            required:
            - instanceID
            - providerID
            type: object
          status:
            description: AzureMachinePoolMachineStatus defines the observed state
              of AzureMachinePoolMachine.
            properties:
              conditions:
                description: Conditions defines current service state of the AzureMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the MachinePool and will contain
                  a more verbose string suitable for logging and human consumption.
                  \n Any transient errors that occur during the reconciliation of
                  MachinePools can be added as events to the MachinePool object and/or
                  logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is
                  a terminal problem reconciling the MachinePool machine and will
                  contain a succinct value suitable for machine interpretation. \n
                  Any transient errors that occur during the reconciliation of MachinePools
                  can be added as events to the MachinePool object and/or logged in
                  the controller's output."
                type: string
              instanceName:
                description: InstanceName is the name of the Machine Instance within
                  the VMSS
                type: string
              latestModelApplied:
                description: LatestModelApplied indicates the instance is running
                  the most up-to-date VMSS model. A VMSS model describes the image
                  version the VM is running. If the instance is not running the latest
                  model, it means the instance may not be running the version of Kubernetes
                  the Machine Pool has specified and needs to be updated.
                type: boolean
              longRunningOperationState:
                description: LongRunningOperationState saves the state for an Azure
                  long running operations so it can be continued on the next reconciliation
                  loop.
                properties:
                  futureData:
                    description: FutureData is the base64 url encoded json Azure AutoRest
                      Future
                    type: string
                  name:
                    description: Name is the name of the Azure resource
                    type: string
                  resourceGroup:
                    description: ResourceGroup is the Azure resource group for the
                      resource
                    type: string
                  type:
                    description: Type describes the type of future, update, create,
                      delete, etc
                    type: string
                required:
                - type
                type: object
              nodeRef:
                description: NodeRef will point to the corresponding Node if it exists.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              provisioningState:
                description: ProvisioningState is the provisioning state of the Azure
                  virtual machine instance.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              version:
                description: Version defines the Kubernetes version for the VM Instance
                type: string
            required:
            - latestModelApplied
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
