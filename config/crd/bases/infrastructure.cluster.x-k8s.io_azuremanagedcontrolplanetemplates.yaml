---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: azuremanagedcontrolplanetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureManagedControlPlaneTemplate
    listKind: AzureManagedControlPlaneTemplateList
    plural: azuremanagedcontrolplanetemplates
    singular: azuremanagedcontrolplanetemplate
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AzureManagedControlPlaneTemplate is the Schema for the AzureManagedControlPlaneTemplates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureManagedControlPlaneTemplateSpec defines the desired
              state of AzureManagedControlPlaneTemplate.
            properties:
              template:
                description: AzureManagedControlPlaneTemplateResource describes the
                  data needed to create an AzureManagedCluster from a template.
                properties:
                  spec:
                    description: AzureManagedControlPlaneTemplateResourceSpec specifies
                      an Azure managed control plane template resource.
                    properties:
                      aadProfile:
                        description: AadProfile is Azure Active Directory configuration
                          to integrate with AKS for aad authentication.
                        properties:
                          adminGroupObjectIDs:
                            description: AdminGroupObjectIDs - AAD group object IDs
                              that will have admin role of the cluster.
                            items:
                              type: string
                            type: array
                          managed:
                            description: Managed - Whether to enable managed AAD.
                            type: boolean
                        required:
                        - adminGroupObjectIDs
                        - managed
                        type: object
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: AdditionalTags is an optional set of tags to
                          add to Azure resources managed by the Azure provider, in
                          addition to the ones added by default.
                        type: object
                      addonProfiles:
                        description: AddonProfiles are the profiles of managed cluster
                          add-on.
                        items:
                          description: AddonProfile represents a managed cluster add-on.
                          properties:
                            config:
                              additionalProperties:
                                type: string
                              description: Config - Key-value pairs for configuring
                                the add-on.
                              type: object
                            enabled:
                              description: Enabled - Whether the add-on is enabled
                                or not.
                              type: boolean
                            name:
                              description: Name - The name of the managed cluster
                                add-on.
                              type: string
                          required:
                          - enabled
                          - name
                          type: object
                        type: array
                      apiServerAccessProfile:
                        description: APIServerAccessProfile is the access profile
                          for AKS API server.
                        properties:
                          enablePrivateCluster:
                            description: EnablePrivateCluster - Whether to create
                              the cluster as a private cluster or not.
                            type: boolean
                          enablePrivateClusterPublicFQDN:
                            description: EnablePrivateClusterPublicFQDN - Whether
                              to create additional public FQDN for private cluster
                              or not.
                            type: boolean
                          privateDNSZone:
                            description: PrivateDNSZone - Private dns zone mode for
                              private cluster.
                            enum:
                            - System
                            - None
                            type: string
                        type: object
                      autoscalerProfile:
                        description: AutoscalerProfile is the parameters to be applied
                          to the cluster-autoscaler when enabled
                        properties:
                          balanceSimilarNodeGroups:
                            description: BalanceSimilarNodeGroups - Valid values are
                              'true' and 'false'. The default is false.
                            enum:
                            - "true"
                            - "false"
                            type: string
                          expander:
                            description: Expander - If not specified, the default
                              is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders)
                              for more information.
                            enum:
                            - least-waste
                            - most-pods
                            - priority
                            - random
                            type: string
                          maxEmptyBulkDelete:
                            description: MaxEmptyBulkDelete - The default is 10.
                            type: string
                          maxGracefulTerminationSec:
                            description: MaxGracefulTerminationSec - The default is
                              600.
                            pattern: ^(\d+)$
                            type: string
                          maxNodeProvisionTime:
                            description: MaxNodeProvisionTime - The default is '15m'.
                              Values must be an integer followed by an 'm'. No unit
                              of time other than minutes (m) is supported.
                            pattern: ^(\d+)m$
                            type: string
                          maxTotalUnreadyPercentage:
                            description: MaxTotalUnreadyPercentage - The default is
                              45. The maximum is 100 and the minimum is 0.
                            maxLength: 3
                            minLength: 1
                            pattern: ^(\d+)$
                            type: string
                          newPodScaleUpDelay:
                            description: NewPodScaleUpDelay - For scenarios like burst/batch
                              scale where you don't want CA to act before the kubernetes
                              scheduler could schedule all the pods, you can tell
                              CA to ignore unscheduled pods before they're a certain
                              age. The default is '0s'. Values must be an integer
                              followed by a unit ('s' for seconds, 'm' for minutes,
                              'h' for hours, etc).
                            type: string
                          okTotalUnreadyCount:
                            description: OkTotalUnreadyCount - This must be an integer.
                              The default is 3.
                            pattern: ^(\d+)$
                            type: string
                          scaleDownDelayAfterAdd:
                            description: ScaleDownDelayAfterAdd - The default is '10m'.
                              Values must be an integer followed by an 'm'. No unit
                              of time other than minutes (m) is supported.
                            pattern: ^(\d+)m$
                            type: string
                          scaleDownDelayAfterDelete:
                            description: ScaleDownDelayAfterDelete - The default is
                              the scan-interval. Values must be an integer followed
                              by an 's'. No unit of time other than seconds (s) is
                              supported.
                            pattern: ^(\d+)s$
                            type: string
                          scaleDownDelayAfterFailure:
                            description: ScaleDownDelayAfterFailure - The default
                              is '3m'. Values must be an integer followed by an 'm'.
                              No unit of time other than minutes (m) is supported.
                            pattern: ^(\d+)m$
                            type: string
                          scaleDownUnneededTime:
                            description: ScaleDownUnneededTime - The default is '10m'.
                              Values must be an integer followed by an 'm'. No unit
                              of time other than minutes (m) is supported.
                            pattern: ^(\d+)m$
                            type: string
                          scaleDownUnreadyTime:
                            description: ScaleDownUnreadyTime - The default is '20m'.
                              Values must be an integer followed by an 'm'. No unit
                              of time other than minutes (m) is supported.
                            pattern: ^(\d+)m$
                            type: string
                          scaleDownUtilizationThreshold:
                            description: ScaleDownUtilizationThreshold - The default
                              is '0.5'.
                            type: string
                          scanInterval:
                            description: ScanInterval - How often cluster is reevaluated
                              for scale up or down. The default is '10s'.
                            pattern: ^(\d+)s$
                            type: string
                          skipNodesWithLocalStorage:
                            description: SkipNodesWithLocalStorage - The default is
                              false.
                            enum:
                            - "true"
                            - "false"
                            type: string
                          skipNodesWithSystemPods:
                            description: SkipNodesWithSystemPods - The default is
                              true.
                            enum:
                            - "true"
                            - "false"
                            type: string
                        type: object
                      dnsServiceIP:
                        description: DNSServiceIP is an IP address assigned to the
                          Kubernetes DNS service. It must be within the Kubernetes
                          service address range specified in serviceCidr.
                        type: string
                      identityRef:
                        description: IdentityRef is a reference to a AzureClusterIdentity
                          to be used when reconciling this cluster
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      loadBalancerProfile:
                        description: LoadBalancerProfile is the profile of the cluster
                          load balancer.
                        properties:
                          allocatedOutboundPorts:
                            description: AllocatedOutboundPorts - Desired number of
                              allocated SNAT ports per VM. Allowed values must be
                              in the range of 0 to 64000 (inclusive). The default
                              value is 0 which results in Azure dynamically allocating
                              ports.
                            format: int32
                            type: integer
                          idleTimeoutInMinutes:
                            description: IdleTimeoutInMinutes - Desired outbound flow
                              idle timeout in minutes. Allowed values must be in the
                              range of 4 to 120 (inclusive). The default value is
                              30 minutes.
                            format: int32
                            type: integer
                          managedOutboundIPs:
                            description: ManagedOutboundIPs - Desired managed outbound
                              IPs for the cluster load balancer.
                            format: int32
                            type: integer
                          outboundIPPrefixes:
                            description: OutboundIPPrefixes - Desired outbound IP
                              Prefix resources for the cluster load balancer.
                            items:
                              type: string
                            type: array
                          outboundIPs:
                            description: OutboundIPs - Desired outbound IP resources
                              for the cluster load balancer.
                            items:
                              type: string
                            type: array
                        type: object
                      loadBalancerSKU:
                        description: LoadBalancerSKU is the SKU of the loadBalancer
                          to be provisioned.
                        enum:
                        - Basic
                        - Standard
                        type: string
                      location:
                        description: 'Location is a string matching one of the canonical
                          Azure region names. Examples: "westus2", "eastus".'
                        type: string
                      machineTemplate:
                        description: MachineTemplate contains information about how
                          machines should be shaped when creating or updating a control
                          plane.
                        properties:
                          metadata:
                            description: 'Standard object''s metadata. More info:
                              https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'Annotations is an unstructured key value
                                  map stored with a resource that may be set by external
                                  tools to store and retrieve arbitrary metadata.
                                  They are not queryable and should be preserved when
                                  modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Map of string keys and values that can
                                  be used to organize and categorize (scope and select)
                                  objects. May match selectors of replication controllers
                                  and services. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                            type: object
                          nodeDeletionTimeout:
                            description: NodeDeletionTimeout defines how long the
                              machine controller will attempt to delete the Node that
                              the Machine hosts after the Machine is marked for deletion.
                              A duration of 0 will retry deletion indefinitely. If
                              no value is provided, the default value for this property
                              of the Machine resource will be used.
                            type: string
                          nodeDrainTimeout:
                            description: 'NodeDrainTimeout is the total amount of
                              time that the controller will spend on draining a controlplane
                              node The default value is 0, meaning that the node can
                              be drained without any time limitations. NOTE: NodeDrainTimeout
                              is different from `kubectl drain --timeout`'
                            type: string
                          nodeVolumeDetachTimeout:
                            description: NodeVolumeDetachTimeout is the total amount
                              of time that the controller will spend on waiting for
                              all volumes to be detached. The default value is 0,
                              meaning that the volumes can be detached without any
                              time limitations.
                            type: string
                        type: object
                      networkPlugin:
                        description: NetworkPlugin used for building Kubernetes network.
                        enum:
                        - azure
                        - kubenet
                        type: string
                      networkPolicy:
                        description: NetworkPolicy used for building Kubernetes network.
                        enum:
                        - azure
                        - calico
                        type: string
                      outboundType:
                        description: Outbound configuration used by Nodes.
                        enum:
                        - loadBalancer
                        - managedNATGateway
                        - userAssignedNATGateway
                        - userDefinedRouting
                        type: string
                      sku:
                        description: SKU is the SKU of the AKS to be provisioned.
                        properties:
                          tier:
                            description: Tier - Tier of an AKS cluster.
                            enum:
                            - Free
                            - Paid
                            - Standard
                            type: string
                        required:
                        - tier
                        type: object
                      subscriptionID:
                        description: SubscriptionID is the GUID of the Azure subscription
                          to hold this cluster.
                        type: string
                      version:
                        description: Version defines the desired Kubernetes version.
                        minLength: 2
                        type: string
                      virtualNetwork:
                        description: VirtualNetwork describes the vnet for the AKS
                          cluster. Will be created if it does not exist.
                        properties:
                          cidrBlock:
                            type: string
                          name:
                            type: string
                          subnet:
                            description: ManagedControlPlaneSubnet describes a subnet
                              for an AKS cluster.
                            properties:
                              cidrBlock:
                                type: string
                              name:
                                type: string
                              privateEndpoints:
                                description: PrivateEndpoints is a slice of Virtual
                                  Network private endpoints to create for the subnets.
                                items:
                                  description: PrivateEndpointSpec configures an Azure
                                    Private Endpoint.
                                  properties:
                                    applicationSecurityGroups:
                                      description: ApplicationSecurityGroups specifies
                                        the Application security group in which the
                                        private endpoint IP configuration is included.
                                      items:
                                        type: string
                                      type: array
                                    customNetworkInterfaceName:
                                      description: CustomNetworkInterfaceName specifies
                                        the network interface name associated with
                                        the private endpoint.
                                      type: string
                                    location:
                                      description: Location specifies the region to
                                        create the private endpoint.
                                      type: string
                                    manualApproval:
                                      description: ManualApproval specifies if the
                                        connection approval needs to be done manually
                                        or not. Set it true when the network admin
                                        does not have access to approve connections
                                        to the remote resource. Defaults to false.
                                      type: boolean
                                    name:
                                      description: Name specifies the name of the
                                        private endpoint.
                                      type: string
                                    privateIPAddresses:
                                      description: PrivateIPAddresses specifies the
                                        IP addresses for the network interface associated
                                        with the private endpoint. They have to be
                                        part of the subnet where the private endpoint
                                        is linked.
                                      items:
                                        type: string
                                      type: array
                                    privateLinkServiceConnections:
                                      description: PrivateLinkServiceConnections specifies
                                        Private Link Service Connections of the private
                                        endpoint.
                                      items:
                                        description: PrivateLinkServiceConnection
                                          defines the specification for a private
                                          link service connection associated with
                                          a private endpoint.
                                        properties:
                                          groupIDs:
                                            description: GroupIDs specifies the ID(s)
                                              of the group(s) obtained from the remote
                                              resource that this private endpoint
                                              should connect to.
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: Name specifies the name of
                                              the private link service.
                                            type: string
                                          privateLinkServiceID:
                                            description: PrivateLinkServiceID specifies
                                              the resource ID of the private link
                                              service.
                                            type: string
                                          requestMessage:
                                            description: RequestMessage specifies
                                              a message passed to the owner of the
                                              remote resource with the private endpoint
                                              connection request.
                                            maxLength: 140
                                            type: string
                                        type: object
                                      type: array
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              serviceEndpoints:
                                description: ServiceEndpoints is a slice of Virtual
                                  Network service endpoints to enable for the subnets.
                                items:
                                  description: ServiceEndpointSpec configures an Azure
                                    Service Endpoint.
                                  properties:
                                    locations:
                                      items:
                                        type: string
                                      type: array
                                    service:
                                      type: string
                                  required:
                                  - locations
                                  - service
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - service
                                x-kubernetes-list-type: map
                            required:
                            - cidrBlock
                            - name
                            type: object
                        required:
                        - cidrBlock
                        - name
                        type: object
                    required:
                    - location
                    - version
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
