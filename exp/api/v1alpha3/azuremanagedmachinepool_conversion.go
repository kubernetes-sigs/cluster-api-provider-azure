/*
Copyright 2021 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha3

import (
	apiconversion "k8s.io/apimachinery/pkg/conversion"
	expv1beta1 "sigs.k8s.io/cluster-api-provider-azure/exp/api/v1beta1"
	utilconversion "sigs.k8s.io/cluster-api/util/conversion"
	"sigs.k8s.io/controller-runtime/pkg/conversion"
)

// ConvertTo converts this AzureManagedMachinePool to the Hub version (v1beta1).
func (src *AzureManagedMachinePool) ConvertTo(dstRaw conversion.Hub) error { // nolint
	dst := dstRaw.(*expv1beta1.AzureManagedMachinePool)

	if err := Convert_v1alpha3_AzureManagedMachinePool_To_v1beta1_AzureManagedMachinePool(src, dst, nil); err != nil {
		return err
	}

	// Manually restore data.
	restored := &expv1beta1.AzureManagedMachinePool{}
	if ok, err := utilconversion.UnmarshalData(src, restored); err != nil || !ok {
		return err
	}
	
	//if restored.ObjectMeta.Annotations != nil {
	//	if dst.ObjectMeta.Annotations == nil {
	//		dst.ObjectMeta.Annotations = expv1beta1.AzureManagedMachinePool{}.ObjectMeta.Annotations
	//	}
	//} else {
	//	dst.ObjectMeta.Annotations = restored.ObjectMeta.Annotations
	//}

	dst.Spec.Name = restored.Spec.Name
	dst.Spec.AutoScaling = restored.Spec.AutoScaling
	dst.Spec.EnableFIPS = restored.Spec.EnableFIPS
	dst.Spec.EnableNodePublicIP = restored.Spec.EnableNodePublicIP
	dst.Spec.OsDiskType = restored.Spec.OsDiskType
	dst.Spec.MaxPods = restored.Spec.MaxPods
	dst.Spec.ScaleSetPriority = restored.Spec.ScaleSetPriority
	dst.Spec.VnetSubnetID = restored.Spec.VnetSubnetID
	dst.Spec.KubeletConfig = restored.Spec.KubeletConfig
	//dst.Spec.KubeletConfig.AllowedUnsafeSysctls = &[]string{}
	//dst.Spec.NodeTaints = []string{}
	//dst.Spec.AvailabilityZones = []string{}

	if restored.Spec.NodeLabels != nil {
		if len(restored.Spec.NodeLabels) == 0 {
			dst.Spec.NodeLabels = map[string]*string{}
		} else {
			dst.Spec.NodeLabels = restored.Spec.NodeLabels
		}
		//for key, value := range restored.Spec.NodeLabels {
		//	dst.Spec.NodeLabels[key] = value
		//}
	} else {
		dst.Spec.NodeLabels = nil
	}

	//
	//	if len(dst.Spec.AvailabilityZones) == 0 {
	//		restore nil value if nothing has changed since conversion
	//		dst.Spec.AvailabilityZones = nil
		//}
	//} else {
	//
	//}

	//if restored.Spec.AvailabilityZones == nil {
	//	dst.Spec.AvailabilityZones = nil
	//} else {
	//	if len(restored.Spec.AvailabilityZones) == 0 {
	//		dst.Spec.AvailabilityZones = []string{}
	//	} else {
	//		dst.Spec.AvailabilityZones = restored.Spec.AvailabilityZones
	//	}
	//}

	dst.Spec.AvailabilityZones = restored.Spec.AvailabilityZones
	if len(dst.Spec.AvailabilityZones) == 0 {
		dst.Spec.AvailabilityZones = nil
	}

	dst.Spec.NodeTaints = restored.Spec.NodeTaints
	if len(dst.Spec.NodeTaints) == 0 {
		dst.Spec.NodeTaints = nil
	}

	//if restored.Spec.NodeTaints == nil {
	//	dst.Spec.NodeTaints = nil
	//} else {
	//	if len(restored.Spec.NodeTaints) == 0 {
	//		dst.Spec.NodeTaints = []string{}
	//	} else {
	//		dst.Spec.NodeTaints = restored.Spec.NodeTaints
	//	}
	//}

	dst.Spec.KubeletConfig = restored.Spec.KubeletConfig
	//if restored.Spec.KubeletConfig.AllowedUnsafeSysctls == nil {
	//	dst.Spec.KubeletConfig.AllowedUnsafeSysctls = nil
	//}

	//if restored.Spec.KubeletConfig != nil {
	//	dst.Spec.KubeletConfig = restored.Spec.KubeletConfig
	//} else {
	//	dst.Spec.KubeletConfig = nil
	//}

	//if restored.Spec.KubeletConfig.AllowedUnsafeSysctls != nil {
	//	dst.Spec.KubeletConfig.AllowedUnsafeSysctls = restored.Spec.KubeletConfig.AllowedUnsafeSysctls
	//} else {
	//	dst.Spec.KubeletConfig.AllowedUnsafeSysctls = nil
	//}

	if len(dst.Annotations) == 0 {
		dst.Annotations = nil
	}

	return nil
}

// ConvertFrom converts from the Hub version (v1beta1) to this version.
func (dst *AzureManagedMachinePool) ConvertFrom(srcRaw conversion.Hub) error { // nolint
	src := srcRaw.(*expv1beta1.AzureManagedMachinePool)

	if err := Convert_v1beta1_AzureManagedMachinePool_To_v1alpha3_AzureManagedMachinePool(src, dst, nil); err != nil {
		return err
	}

	// Preserve Hub data on down-conversion.
	if err := utilconversion.MarshalData(src, dst); err != nil {
		return err
	}

	return nil
}

// Convert_v1beta1_AzureManagedMachinePoolSpec_To_v1alpha3_AzureManagedMachinePoolSpec is an autogenerated conversion function.
func Convert_v1beta1_AzureManagedMachinePoolSpec_To_v1alpha3_AzureManagedMachinePoolSpec(in *expv1beta1.AzureManagedMachinePoolSpec, out *AzureManagedMachinePoolSpec, s apiconversion.Scope) error {
	return autoConvert_v1beta1_AzureManagedMachinePoolSpec_To_v1alpha3_AzureManagedMachinePoolSpec(in, out, s)
}
