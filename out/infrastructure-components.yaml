apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capz-serving-cert
    controller-gen.kubebuilder.io/version: v0.3.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: azureclusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capz-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureCluster
    listKind: AzureClusterList
    plural: azureclusters
    singular: azurecluster
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: AzureCluster is the Schema for the azureclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureClusterSpec defines the desired state of AzureCluster
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the ones added by default.
                type: object
              location:
                type: string
              networkSpec:
                description: NetworkSpec encapsulates all things related to Azure network.
                properties:
                  subnets:
                    description: Subnets is the configuration for the control-plane subnet and the node subnet.
                    items:
                      description: SubnetSpec configures an Azure subnet.
                      properties:
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when the provider creates a managed Vnet.
                          type: string
                        id:
                          description: ID defines a unique identifier to reference this resource.
                          type: string
                        internalLBIPAddress:
                          description: InternalLBIPAddress is the IP address that will be used as the internal LB private IP. For the control plane subnet only.
                          type: string
                        name:
                          description: Name defines a name for the subnet resource.
                          type: string
                        role:
                          description: Role defines the subnet role (eg. Node, ControlPlane)
                          type: string
                        securityGroup:
                          description: SecurityGroup defines the NSG (network security group) that should be attached to this subnet.
                          properties:
                            id:
                              type: string
                            ingressRule:
                              description: IngressRules is a slice of Azure ingress rules for security groups.
                              items:
                                description: IngressRule defines an Azure ingress rule for security groups.
                                properties:
                                  description:
                                    type: string
                                  destination:
                                    description: Destination - The destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                                    type: string
                                  destinationPorts:
                                    description: DestinationPorts - The destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                    type: string
                                  protocol:
                                    description: SecurityGroupProtocol defines the protocol type for a security group rule.
                                    type: string
                                  source:
                                    description: Source - The CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
                                    type: string
                                  sourcePorts:
                                    description: SourcePorts - The source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                    type: string
                                required:
                                - description
                                - protocol
                                type: object
                              type: array
                            name:
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              description: Tags defines a map of tags.
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  vnet:
                    description: Vnet is the configuration for the Azure virtual network.
                    properties:
                      cidrBlock:
                        description: CidrBlock is the CIDR block to be used when the provider creates a managed virtual network.
                        type: string
                      id:
                        description: ID is the identifier of the virtual network this provider should use to create resources.
                        type: string
                      name:
                        description: Name defines a name for the virtual network resource.
                        type: string
                      resourceGroup:
                        description: ResourceGroup is the name of the resource group of the existing virtual network or the resource group where a managed virtual network should be created.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a collection of tags describing the resource.
                        type: object
                    required:
                    - name
                    type: object
                type: object
              resourceGroup:
                type: string
            required:
            - location
            - resourceGroup
            type: object
          status:
            description: AzureClusterStatus defines the observed state of AzureCluster
            properties:
              apiEndpoints:
                description: APIEndpoints represents the endpoints to communicate with the control plane.
                items:
                  description: APIEndpoint represents a reachable Kubernetes API endpoint.
                  properties:
                    host:
                      description: The hostname on which the API server is serving.
                      type: string
                    port:
                      description: The port on which the API server is serving.
                      type: integer
                  required:
                  - host
                  - port
                  type: object
                type: array
              network:
                description: Network encapsulates Azure networking resources.
                properties:
                  apiServerIp:
                    description: APIServerIP is the Kubernetes API server public IP address.
                    properties:
                      dnsName:
                        type: string
                      id:
                        type: string
                      ipAddress:
                        type: string
                      name:
                        type: string
                    type: object
                  apiServerLb:
                    description: APIServerLB is the Kubernetes API server load balancer.
                    properties:
                      backendPool:
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                        type: object
                      frontendIpConfig:
                        type: object
                      id:
                        type: string
                      name:
                        type: string
                      sku:
                        description: LoadBalancerSKU enumerates the values for load balancer sku name.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags defines a map of tags.
                        type: object
                    type: object
                  securityGroups:
                    additionalProperties:
                      description: SecurityGroup defines an Azure security group.
                      properties:
                        id:
                          type: string
                        ingressRule:
                          description: IngressRules is a slice of Azure ingress rules for security groups.
                          items:
                            description: IngressRule defines an Azure ingress rule for security groups.
                            properties:
                              description:
                                type: string
                              destination:
                                description: Destination - The destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                                type: string
                              destinationPorts:
                                description: DestinationPorts - The destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                type: string
                              protocol:
                                description: SecurityGroupProtocol defines the protocol type for a security group rule.
                                type: string
                              source:
                                description: Source - The CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
                                type: string
                              sourcePorts:
                                description: SourcePorts - The source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                type: string
                            required:
                            - description
                            - protocol
                            type: object
                          type: array
                        name:
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags defines a map of tags.
                          type: object
                      type: object
                    description: SecurityGroups is a map from the role/kind of the security group to its unique name, if any.
                    type: object
                type: object
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Cluster to which this AzureCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - jsonPath: .spec.resourceGroup
      name: Resource Group
      priority: 1
      type: string
    - jsonPath: .spec.subscriptionID
      name: SubscriptionID
      priority: 1
      type: string
    - jsonPath: .spec.location
      name: Location
      priority: 1
      type: string
    - description: Control Plane Endpoint
      jsonPath: .spec.controlPlaneEndpoint.host
      name: Endpoint
      priority: 1
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AzureCluster is the Schema for the azureclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureClusterSpec defines the desired state of AzureCluster
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the ones added by default.
                type: object
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              location:
                type: string
              networkSpec:
                description: NetworkSpec encapsulates all things related to Azure network.
                properties:
                  subnets:
                    description: Subnets is the configuration for the control-plane subnet and the node subnet.
                    items:
                      description: SubnetSpec configures an Azure subnet.
                      properties:
                        cidrBlock:
                          description: CidrBlock is the CIDR block to be used when the provider creates a managed Vnet.
                          type: string
                        id:
                          description: ID defines a unique identifier to reference this resource.
                          type: string
                        internalLBIPAddress:
                          description: InternalLBIPAddress is the IP address that will be used as the internal LB private IP. For the control plane subnet only.
                          type: string
                        name:
                          description: Name defines a name for the subnet resource.
                          type: string
                        role:
                          description: Role defines the subnet role (eg. Node, ControlPlane)
                          type: string
                        routeTable:
                          description: RouteTable defines the route table that should be attached to this subnet.
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                          type: object
                        securityGroup:
                          description: SecurityGroup defines the NSG (network security group) that should be attached to this subnet.
                          properties:
                            id:
                              type: string
                            ingressRule:
                              description: IngressRules is a slice of Azure ingress rules for security groups.
                              items:
                                description: IngressRule defines an Azure ingress rule for security groups.
                                properties:
                                  description:
                                    type: string
                                  destination:
                                    description: Destination - The destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                                    type: string
                                  destinationPorts:
                                    description: DestinationPorts - The destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                    type: string
                                  name:
                                    type: string
                                  priority:
                                    description: Priority - A number between 100 and 4096. Each rule should have a unique value for priority. Rules are processed in priority order, with lower numbers processed before higher numbers. Once traffic matches a rule, processing stops.
                                    format: int32
                                    type: integer
                                  protocol:
                                    description: SecurityGroupProtocol defines the protocol type for a security group rule.
                                    type: string
                                  source:
                                    description: Source - The CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
                                    type: string
                                  sourcePorts:
                                    description: SourcePorts - The source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                    type: string
                                required:
                                - description
                                - name
                                - protocol
                                type: object
                              type: array
                            name:
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              description: Tags defines a map of tags.
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  vnet:
                    description: Vnet is the configuration for the Azure virtual network.
                    properties:
                      cidrBlock:
                        description: CidrBlock is the CIDR block to be used when the provider creates a managed virtual network.
                        type: string
                      id:
                        description: ID is the identifier of the virtual network this provider should use to create resources.
                        type: string
                      name:
                        description: Name defines a name for the virtual network resource.
                        type: string
                      resourceGroup:
                        description: ResourceGroup is the name of the resource group of the existing virtual network or the resource group where a managed virtual network should be created.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a collection of tags describing the resource.
                        type: object
                    required:
                    - name
                    type: object
                type: object
              resourceGroup:
                type: string
              subscriptionID:
                type: string
            required:
            - location
            type: object
          status:
            description: AzureClusterStatus defines the observed state of AzureCluster
            properties:
              conditions:
                description: Conditions defines current service state of the AzureCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureDomains:
                additionalProperties:
                  description: FailureDomainSpec is the Schema for Cluster API failure domains. It allows controllers to understand how many failure domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: Attributes is a free form map of attributes an infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: ControlPlane determines if this failure domain is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: 'FailureDomains specifies the list of unique failure domains for the location/region of the cluster. A FailureDomain maps to Availability Zone with an Azure Region (if the region support them). An Availability Zone is a separate data center within a region and they can be used to ensure the cluster is more resilient to failure. See: https://docs.microsoft.com/en-us/azure/availability-zones/az-overview This list will be used by Cluster API to try and spread the machines across the failure domains.'
                type: object
              network:
                description: Network encapsulates the state of Azure networking resources.
                properties:
                  apiServerIp:
                    description: APIServerIP is the Kubernetes API server public IP address.
                    properties:
                      dnsName:
                        type: string
                      id:
                        type: string
                      ipAddress:
                        type: string
                      name:
                        type: string
                    type: object
                  apiServerLb:
                    description: APIServerLB is the Kubernetes API server load balancer.
                    properties:
                      backendPool:
                        description: BackendPool defines a load balancer backend pool
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                        type: object
                      frontendIpConfig:
                        description: FrontendIPConfig - DO NOT USE this empty struct is here to preserve backwards compatibility and should be removed in v1alpha4
                        type: object
                      id:
                        type: string
                      name:
                        type: string
                      sku:
                        description: SKU defines an Azure load balancer SKU.
                        type: string
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags defines a map of tags.
                        type: object
                    type: object
                type: object
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capz-serving-cert
    controller-gen.kubebuilder.io/version: v0.3.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: azuremachinepools.exp.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capz-webhook-service
          namespace: system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: exp.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureMachinePool
    listKind: AzureMachinePoolList
    plural: azuremachinepools
    shortNames:
    - amp
    singular: azuremachinepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: AzureMachinePool replicas count
      jsonPath: .status.replicas
      name: Replicas
      type: string
    - description: AzureMachinePool replicas count
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Azure VMSS provisioning state
      jsonPath: .status.provisioningState
      name: State
      type: string
    - description: Cluster to which this AzureMachinePool belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      priority: 1
      type: string
    - description: MachinePool object to which this AzureMachinePool belongs
      jsonPath: .metadata.ownerReferences[?(@.kind=="MachinePool")].name
      name: MachinePool
      priority: 1
      type: string
    - description: Azure VMSS ID
      jsonPath: .spec.providerID
      name: VMSS ID
      priority: 1
      type: string
    - description: Azure VM Size
      jsonPath: .spec.template.vmSize
      name: VM Size
      priority: 1
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AzureMachinePool is the Schema for the azuremachinepools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachinePoolSpec defines the desired state of AzureMachinePool
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the AzureMachine's value takes precedence.
                type: object
              location:
                description: Location is the Azure region location e.g. westus2
                type: string
              providerID:
                description: ProviderID is the identification ID of the Virtual Machine Scale Set
                type: string
              providerIDList:
                description: ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
                items:
                  type: string
                type: array
              template:
                description: Template contains the details used to build a replica virtual machine within the Machine Pool
                properties:
                  acceleratedNetworking:
                    description: AcceleratedNetworking enables or disables Azure accelerated networking. If omitted, it will be set based on whether the requested VMSize supports accelerated networking. If AcceleratedNetworking is set to true with a VMSize that does not support it, Azure will return an error.
                    type: boolean
                  dataDisks:
                    description: DataDisks specifies the list of data disks to be created for a Virtual Machine
                    items:
                      description: DataDisk specifies the parameters that are used to add one or more data disks to the machine.
                      properties:
                        cachingType:
                          type: string
                        diskSizeGB:
                          description: DiskSizeGB is the size in GB to assign to the data disk.
                          format: int32
                          type: integer
                        lun:
                          description: Lun Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. The value must be between 0 and 63.
                          format: int32
                          type: integer
                        nameSuffix:
                          description: NameSuffix is the suffix to be appended to the machine name to generate the disk name. Each disk name will be in format <machineName>_<nameSuffix>.
                          type: string
                      required:
                      - diskSizeGB
                      - nameSuffix
                      type: object
                    type: array
                  image:
                    description: Image is used to provide details of an image to use during Virtual Machine creation. If image details are omitted the image will default the Azure Marketplace "capi" offer, which is based on Ubuntu.
                    properties:
                      id:
                        description: ID specifies an image to use by ID
                        type: string
                      marketplace:
                        description: Marketplace specifies an image to use from the Azure Marketplace
                        properties:
                          offer:
                            description: Offer specifies the name of a group of related images created by the publisher. For example, UbuntuServer, WindowsServer
                            minLength: 1
                            type: string
                          publisher:
                            description: Publisher is the name of the organization that created the image
                            minLength: 1
                            type: string
                          sku:
                            description: SKU specifies an instance of an offer, such as a major release of a distribution. For example, 18.04-LTS, 2019-Datacenter
                            minLength: 1
                            type: string
                          version:
                            description: Version specifies the version of an image sku. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
                            minLength: 1
                            type: string
                        required:
                        - offer
                        - publisher
                        - sku
                        - version
                        type: object
                      sharedGallery:
                        description: SharedGallery specifies an image to use from an Azure Shared Image Gallery
                        properties:
                          gallery:
                            description: Gallery specifies the name of the shared image gallery that contains the image
                            minLength: 1
                            type: string
                          name:
                            description: Name is the name of the image
                            minLength: 1
                            type: string
                          resourceGroup:
                            description: ResourceGroup specifies the resource group containing the shared image gallery
                            minLength: 1
                            type: string
                          subscriptionID:
                            description: SubscriptionID is the identifier of the subscription that contains the shared image gallery
                            minLength: 1
                            type: string
                          version:
                            description: Version specifies the version of the marketplace image. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
                            minLength: 1
                            type: string
                        required:
                        - gallery
                        - name
                        - resourceGroup
                        - subscriptionID
                        - version
                        type: object
                    type: object
                  osDisk:
                    description: OSDisk contains the operating system disk information for a Virtual Machine
                    properties:
                      cachingType:
                        type: string
                      diffDiskSettings:
                        description: DiffDiskSettings describe ephemeral disk settings for the os disk.
                        properties:
                          option:
                            description: Option enables ephemeral OS when set to "Local" See https://docs.microsoft.com/en-us/azure/virtual-machines/ephemeral-os-disks for full details
                            enum:
                            - Local
                            type: string
                        required:
                        - option
                        type: object
                      diskSizeGB:
                        format: int32
                        type: integer
                      managedDisk:
                        description: ManagedDisk defines the managed disk options for a VM.
                        properties:
                          storageAccountType:
                            type: string
                        required:
                        - storageAccountType
                        type: object
                      osType:
                        type: string
                    required:
                    - diskSizeGB
                    - managedDisk
                    - osType
                    type: object
                  sshPublicKey:
                    description: SSHPublicKey is the SSH public key string base64 encoded to add to a Virtual Machine
                    type: string
                  terminateNotificationTimeout:
                    description: TerminateNotificationTimeout enables or disables VMSS scheduled events termination notification with specified timeout allowed values are between 5 and 15 (mins)
                    type: integer
                  vmSize:
                    description: VMSize is the size of the Virtual Machine to build. See https://docs.microsoft.com/en-us/rest/api/compute/virtualmachines/createorupdate#virtualmachinesizetypes
                    type: string
                required:
                - osDisk
                - sshPublicKey
                - vmSize
                type: object
            required:
            - location
            - template
            type: object
          status:
            description: AzureMachinePoolStatus defines the observed state of AzureMachinePool
            properties:
              failureMessage:
                description: "ErrorMessage will be set in the event that there is a terminal problem reconciling the MachinePool and will contain a more verbose string suitable for logging and human consumption. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the MachinePool's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of MachinePools can be added as events to the MachinePool object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "ErrorReason will be set in the event that there is a terminal problem reconciling the MachinePool and will contain a succinct value suitable for machine interpretation. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the MachinePool's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of MachinePools can be added as events to the MachinePool object and/or logged in the controller's output."
                type: string
              provisioningState:
                description: ProvisioningState is the provisioning state of the Azure virtual machine.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capz-serving-cert
    controller-gen.kubebuilder.io/version: v0.3.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: azuremachines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capz-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureMachine
    listKind: AzureMachineList
    plural: azuremachines
    singular: azuremachine
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: AzureMachine is the Schema for the azuremachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachineSpec defines the desired state of AzureMachine
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the AzureMachine's value takes precedence.
                type: object
              allocatePublicIP:
                description: AllocatePublicIP allows the ability to create dynamic public ips for machines where this value is true.
                type: boolean
              availabilityZone:
                properties:
                  enabled:
                    type: boolean
                  id:
                    type: string
                type: object
              image:
                description: 'Image defines information about the image to use for VM creation. There are three ways to specify an image: by ID, by publisher, or by Shared Image Gallery. If specifying an image by ID, only the ID field needs to be set. If specifying an image by publisher, the Publisher, Offer, SKU, and Version fields must be set. If specifying an image from a Shared Image Gallery, the SubscriptionID, ResourceGroup, Gallery, Name, and Version fields must be set.'
                properties:
                  gallery:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
                  offer:
                    type: string
                  publisher:
                    type: string
                  resourceGroup:
                    type: string
                  sku:
                    type: string
                  subscriptionID:
                    type: string
                  version:
                    type: string
                type: object
              location:
                type: string
              osDisk:
                properties:
                  diskSizeGB:
                    format: int32
                    type: integer
                  managedDisk:
                    properties:
                      storageAccountType:
                        type: string
                    required:
                    - storageAccountType
                    type: object
                  osType:
                    type: string
                required:
                - diskSizeGB
                - managedDisk
                - osType
                type: object
              providerID:
                description: ProviderID is the unique identifier as specified by the cloud provider.
                type: string
              sshPublicKey:
                type: string
              vmSize:
                type: string
            required:
            - location
            - osDisk
            - sshPublicKey
            - vmSize
            type: object
          status:
            description: AzureMachineStatus defines the observed state of AzureMachine
            properties:
              addresses:
                description: Addresses contains the Azure instance associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              errorMessage:
                description: "ErrorMessage will be set in the event that there is a terminal problem reconciling the Machine and will contain a more verbose string suitable for logging and human consumption. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output."
                type: string
              errorReason:
                description: "ErrorReason will be set in the event that there is a terminal problem reconciling the Machine and will contain a succinct value suitable for machine interpretation. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output."
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              vmState:
                description: VMState is the provisioning state of the Azure virtual machine.
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: AzureMachine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Azure VM provisioning state
      jsonPath: .status.vmState
      name: State
      type: string
    - description: Cluster to which this AzureMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      priority: 1
      type: string
    - description: Machine object to which this AzureMachine belongs
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      priority: 1
      type: string
    - description: Azure VM ID
      jsonPath: .spec.providerID
      name: VM ID
      priority: 1
      type: string
    - description: Azure VM Size
      jsonPath: .spec.vmSize
      name: VM Size
      priority: 1
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AzureMachine is the Schema for the azuremachines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachineSpec defines the desired state of AzureMachine
            properties:
              acceleratedNetworking:
                description: AcceleratedNetworking enables or disables Azure accelerated networking. If omitted, it will be set based on whether the requested VMSize supports accelerated networking. If AcceleratedNetworking is set to true with a VMSize that does not support it, Azure will return an error.
                type: boolean
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the AzureMachine's value takes precedence.
                type: object
              allocatePublicIP:
                description: AllocatePublicIP allows the ability to create dynamic public ips for machines where this value is true.
                type: boolean
              availabilityZone:
                description: 'DEPRECATED: use FailureDomain instead'
                properties:
                  enabled:
                    type: boolean
                  id:
                    type: string
                type: object
              dataDisks:
                description: DataDisk specifies the parameters that are used to add one or more data disks to the machine
                items:
                  description: DataDisk specifies the parameters that are used to add one or more data disks to the machine.
                  properties:
                    cachingType:
                      type: string
                    diskSizeGB:
                      description: DiskSizeGB is the size in GB to assign to the data disk.
                      format: int32
                      type: integer
                    lun:
                      description: Lun Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. The value must be between 0 and 63.
                      format: int32
                      type: integer
                    nameSuffix:
                      description: NameSuffix is the suffix to be appended to the machine name to generate the disk name. Each disk name will be in format <machineName>_<nameSuffix>.
                      type: string
                  required:
                  - diskSizeGB
                  - nameSuffix
                  type: object
                type: array
              failureDomain:
                description: FailureDomain is the failure domain unique identifier this Machine should be attached to, as defined in Cluster API. This relates to an Azure Availability Zone
                type: string
              identity:
                default: None
                description: Identity is the type of identity used for the virtual machine. The type 'SystemAssigned' is an implicitly created identity. The generated identity will be assigned a Subscription contributor role. The type 'UserAssigned' is a standalone Azure resource provided by the user and assigned to the VM
                enum:
                - None
                - SystemAssigned
                - UserAssigned
                type: string
              image:
                description: Image is used to provide details of an image to use during VM creation. If image details are omitted the image will default the Azure Marketplace "capi" offer, which is based on Ubuntu.
                properties:
                  id:
                    description: ID specifies an image to use by ID
                    type: string
                  marketplace:
                    description: Marketplace specifies an image to use from the Azure Marketplace
                    properties:
                      offer:
                        description: Offer specifies the name of a group of related images created by the publisher. For example, UbuntuServer, WindowsServer
                        minLength: 1
                        type: string
                      publisher:
                        description: Publisher is the name of the organization that created the image
                        minLength: 1
                        type: string
                      sku:
                        description: SKU specifies an instance of an offer, such as a major release of a distribution. For example, 18.04-LTS, 2019-Datacenter
                        minLength: 1
                        type: string
                      version:
                        description: Version specifies the version of an image sku. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
                        minLength: 1
                        type: string
                    required:
                    - offer
                    - publisher
                    - sku
                    - version
                    type: object
                  sharedGallery:
                    description: SharedGallery specifies an image to use from an Azure Shared Image Gallery
                    properties:
                      gallery:
                        description: Gallery specifies the name of the shared image gallery that contains the image
                        minLength: 1
                        type: string
                      name:
                        description: Name is the name of the image
                        minLength: 1
                        type: string
                      resourceGroup:
                        description: ResourceGroup specifies the resource group containing the shared image gallery
                        minLength: 1
                        type: string
                      subscriptionID:
                        description: SubscriptionID is the identifier of the subscription that contains the shared image gallery
                        minLength: 1
                        type: string
                      version:
                        description: Version specifies the version of the marketplace image. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
                        minLength: 1
                        type: string
                    required:
                    - gallery
                    - name
                    - resourceGroup
                    - subscriptionID
                    - version
                    type: object
                type: object
              location:
                description: 'DEPRECATED: to support old clients, will be removed in v1alpha4'
                type: string
              osDisk:
                description: OSDisk specifies the parameters for the operating system disk of the machine
                properties:
                  cachingType:
                    type: string
                  diffDiskSettings:
                    description: DiffDiskSettings describe ephemeral disk settings for the os disk.
                    properties:
                      option:
                        description: Option enables ephemeral OS when set to "Local" See https://docs.microsoft.com/en-us/azure/virtual-machines/ephemeral-os-disks for full details
                        enum:
                        - Local
                        type: string
                    required:
                    - option
                    type: object
                  diskSizeGB:
                    format: int32
                    type: integer
                  managedDisk:
                    description: ManagedDisk defines the managed disk options for a VM.
                    properties:
                      storageAccountType:
                        type: string
                    required:
                    - storageAccountType
                    type: object
                  osType:
                    type: string
                required:
                - diskSizeGB
                - managedDisk
                - osType
                type: object
              providerID:
                description: ProviderID is the unique identifier as specified by the cloud provider.
                type: string
              spotVMOptions:
                description: SpotVMOptions allows the ability to specify the Machine should use a Spot VM
                properties:
                  maxPrice:
                    description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                    type: number
                type: object
              sshPublicKey:
                type: string
              userAssignedIdentities:
                description: UserAssignedIdentities is a list of standalone Azure identities provided by the user The lifecycle of a user-assigned identity is managed separately from the lifecycle of the AzureMachine.
                items:
                  description: UserAssignedIdentity defines the user-assigned identities provided by the user to be assigned to Azure resources.
                  properties:
                    providerID:
                      description: 'ProviderID is the identification ID of the user-assigned Identity, the format of an identity is: ''azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'''
                      type: string
                  required:
                  - providerID
                  type: object
                type: array
              vmSize:
                type: string
            required:
            - location
            - osDisk
            - sshPublicKey
            - vmSize
            type: object
          status:
            description: AzureMachineStatus defines the observed state of AzureMachine
            properties:
              addresses:
                description: Addresses contains the Azure instance associated addresses.
                items:
                  description: NodeAddress contains information for the node's address.
                  properties:
                    address:
                      description: The node address.
                      type: string
                    type:
                      description: Node address type, one of Hostname, ExternalIP or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the AzureMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition in CamelCase. The specific API may choose whether or not this field is considered a guaranteed API. This field may not be empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: "ErrorMessage will be set in the event that there is a terminal problem reconciling the Machine and will contain a more verbose string suitable for logging and human consumption. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "ErrorReason will be set in the event that there is a terminal problem reconciling the Machine and will contain a succinct value suitable for machine interpretation. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the Machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output."
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              vmState:
                description: VMState is the provisioning state of the Azure virtual machine.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capz-serving-cert
    controller-gen.kubebuilder.io/version: v0.3.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: azuremachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capz-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureMachineTemplate
    listKind: AzureMachineTemplateList
    plural: azuremachinetemplates
    singular: azuremachinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: AzureMachineTemplate is the Schema for the azuremachinetemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachineTemplateSpec defines the desired state of AzureMachineTemplate
            properties:
              template:
                description: AzureMachineTemplateResource describes the data needed to create am AzureMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior of the machine.
                    properties:
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the AzureMachine's value takes precedence.
                        type: object
                      allocatePublicIP:
                        description: AllocatePublicIP allows the ability to create dynamic public ips for machines where this value is true.
                        type: boolean
                      availabilityZone:
                        properties:
                          enabled:
                            type: boolean
                          id:
                            type: string
                        type: object
                      image:
                        description: 'Image defines information about the image to use for VM creation. There are three ways to specify an image: by ID, by publisher, or by Shared Image Gallery. If specifying an image by ID, only the ID field needs to be set. If specifying an image by publisher, the Publisher, Offer, SKU, and Version fields must be set. If specifying an image from a Shared Image Gallery, the SubscriptionID, ResourceGroup, Gallery, Name, and Version fields must be set.'
                        properties:
                          gallery:
                            type: string
                          id:
                            type: string
                          name:
                            type: string
                          offer:
                            type: string
                          publisher:
                            type: string
                          resourceGroup:
                            type: string
                          sku:
                            type: string
                          subscriptionID:
                            type: string
                          version:
                            type: string
                        type: object
                      location:
                        type: string
                      osDisk:
                        properties:
                          diskSizeGB:
                            format: int32
                            type: integer
                          managedDisk:
                            properties:
                              storageAccountType:
                                type: string
                            required:
                            - storageAccountType
                            type: object
                          osType:
                            type: string
                        required:
                        - diskSizeGB
                        - managedDisk
                        - osType
                        type: object
                      providerID:
                        description: ProviderID is the unique identifier as specified by the cloud provider.
                        type: string
                      sshPublicKey:
                        type: string
                      vmSize:
                        type: string
                    required:
                    - location
                    - osDisk
                    - sshPublicKey
                    - vmSize
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AzureMachineTemplate is the Schema for the azuremachinetemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureMachineTemplateSpec defines the desired state of AzureMachineTemplate
            properties:
              template:
                description: AzureMachineTemplateResource describes the data needed to create an AzureMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior of the machine.
                    properties:
                      acceleratedNetworking:
                        description: AcceleratedNetworking enables or disables Azure accelerated networking. If omitted, it will be set based on whether the requested VMSize supports accelerated networking. If AcceleratedNetworking is set to true with a VMSize that does not support it, Azure will return an error.
                        type: boolean
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the AzureMachine's value takes precedence.
                        type: object
                      allocatePublicIP:
                        description: AllocatePublicIP allows the ability to create dynamic public ips for machines where this value is true.
                        type: boolean
                      availabilityZone:
                        description: 'DEPRECATED: use FailureDomain instead'
                        properties:
                          enabled:
                            type: boolean
                          id:
                            type: string
                        type: object
                      dataDisks:
                        description: DataDisk specifies the parameters that are used to add one or more data disks to the machine
                        items:
                          description: DataDisk specifies the parameters that are used to add one or more data disks to the machine.
                          properties:
                            cachingType:
                              type: string
                            diskSizeGB:
                              description: DiskSizeGB is the size in GB to assign to the data disk.
                              format: int32
                              type: integer
                            lun:
                              description: Lun Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. The value must be between 0 and 63.
                              format: int32
                              type: integer
                            nameSuffix:
                              description: NameSuffix is the suffix to be appended to the machine name to generate the disk name. Each disk name will be in format <machineName>_<nameSuffix>.
                              type: string
                          required:
                          - diskSizeGB
                          - nameSuffix
                          type: object
                        type: array
                      failureDomain:
                        description: FailureDomain is the failure domain unique identifier this Machine should be attached to, as defined in Cluster API. This relates to an Azure Availability Zone
                        type: string
                      identity:
                        default: None
                        description: Identity is the type of identity used for the virtual machine. The type 'SystemAssigned' is an implicitly created identity. The generated identity will be assigned a Subscription contributor role. The type 'UserAssigned' is a standalone Azure resource provided by the user and assigned to the VM
                        enum:
                        - None
                        - SystemAssigned
                        - UserAssigned
                        type: string
                      image:
                        description: Image is used to provide details of an image to use during VM creation. If image details are omitted the image will default the Azure Marketplace "capi" offer, which is based on Ubuntu.
                        properties:
                          id:
                            description: ID specifies an image to use by ID
                            type: string
                          marketplace:
                            description: Marketplace specifies an image to use from the Azure Marketplace
                            properties:
                              offer:
                                description: Offer specifies the name of a group of related images created by the publisher. For example, UbuntuServer, WindowsServer
                                minLength: 1
                                type: string
                              publisher:
                                description: Publisher is the name of the organization that created the image
                                minLength: 1
                                type: string
                              sku:
                                description: SKU specifies an instance of an offer, such as a major release of a distribution. For example, 18.04-LTS, 2019-Datacenter
                                minLength: 1
                                type: string
                              version:
                                description: Version specifies the version of an image sku. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
                                minLength: 1
                                type: string
                            required:
                            - offer
                            - publisher
                            - sku
                            - version
                            type: object
                          sharedGallery:
                            description: SharedGallery specifies an image to use from an Azure Shared Image Gallery
                            properties:
                              gallery:
                                description: Gallery specifies the name of the shared image gallery that contains the image
                                minLength: 1
                                type: string
                              name:
                                description: Name is the name of the image
                                minLength: 1
                                type: string
                              resourceGroup:
                                description: ResourceGroup specifies the resource group containing the shared image gallery
                                minLength: 1
                                type: string
                              subscriptionID:
                                description: SubscriptionID is the identifier of the subscription that contains the shared image gallery
                                minLength: 1
                                type: string
                              version:
                                description: Version specifies the version of the marketplace image. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available.
                                minLength: 1
                                type: string
                            required:
                            - gallery
                            - name
                            - resourceGroup
                            - subscriptionID
                            - version
                            type: object
                        type: object
                      location:
                        description: 'DEPRECATED: to support old clients, will be removed in v1alpha4'
                        type: string
                      osDisk:
                        description: OSDisk specifies the parameters for the operating system disk of the machine
                        properties:
                          cachingType:
                            type: string
                          diffDiskSettings:
                            description: DiffDiskSettings describe ephemeral disk settings for the os disk.
                            properties:
                              option:
                                description: Option enables ephemeral OS when set to "Local" See https://docs.microsoft.com/en-us/azure/virtual-machines/ephemeral-os-disks for full details
                                enum:
                                - Local
                                type: string
                            required:
                            - option
                            type: object
                          diskSizeGB:
                            format: int32
                            type: integer
                          managedDisk:
                            description: ManagedDisk defines the managed disk options for a VM.
                            properties:
                              storageAccountType:
                                type: string
                            required:
                            - storageAccountType
                            type: object
                          osType:
                            type: string
                        required:
                        - diskSizeGB
                        - managedDisk
                        - osType
                        type: object
                      providerID:
                        description: ProviderID is the unique identifier as specified by the cloud provider.
                        type: string
                      spotVMOptions:
                        description: SpotVMOptions allows the ability to specify the Machine should use a Spot VM
                        properties:
                          maxPrice:
                            description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                            type: number
                        type: object
                      sshPublicKey:
                        type: string
                      userAssignedIdentities:
                        description: UserAssignedIdentities is a list of standalone Azure identities provided by the user The lifecycle of a user-assigned identity is managed separately from the lifecycle of the AzureMachine.
                        items:
                          description: UserAssignedIdentity defines the user-assigned identities provided by the user to be assigned to Azure resources.
                          properties:
                            providerID:
                              description: 'ProviderID is the identification ID of the user-assigned Identity, the format of an identity is: ''azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'''
                              type: string
                          required:
                          - providerID
                          type: object
                        type: array
                      vmSize:
                        type: string
                    required:
                    - location
                    - osDisk
                    - sshPublicKey
                    - vmSize
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: azuremanagedclusters.exp.infrastructure.cluster.x-k8s.io
spec:
  group: exp.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureManagedCluster
    listKind: AzureManagedClusterList
    plural: azuremanagedclusters
    shortNames:
    - amc
    singular: azuremanagedcluster
  scope: Namespaced
  versions:
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AzureManagedCluster is the Schema for the azuremanagedclusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureManagedClusterSpec defines the desired state of AzureManagedCluster
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
            type: object
          status:
            description: AzureManagedClusterStatus defines the observed state of AzureManagedCluster
            properties:
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: azuremanagedcontrolplanes.exp.infrastructure.cluster.x-k8s.io
spec:
  group: exp.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureManagedControlPlane
    listKind: AzureManagedControlPlaneList
    plural: azuremanagedcontrolplanes
    shortNames:
    - amcp
    singular: azuremanagedcontrolplane
  scope: Namespaced
  versions:
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AzureManagedControlPlane is the Schema for the azuremanagedcontrolplanes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureManagedControlPlaneSpec defines the desired state of AzureManagedControlPlane
            properties:
              additionalTags:
                additionalProperties:
                  type: string
                description: AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the ones added by default.
                type: object
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              defaultPoolRef:
                description: DefaultPoolRef is the specification for the default pool, without which an AKS cluster cannot be created.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              dnsServiceIP:
                description: DNSServiceIP is an IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.
                type: string
              loadBalancerSKU:
                description: LoadBalancerSKU is the SKU of the loadBalancer to be provisioned.
                enum:
                - Basic
                - Standard
                type: string
              location:
                description: 'Location is a string matching one of the canonical Azure region names. Examples: "westus2", "eastus".'
                type: string
              networkPlugin:
                description: NetworkPlugin used for building Kubernetes network.
                enum:
                - azure
                - kubenet
                type: string
              networkPolicy:
                description: NetworkPolicy used for building Kubernetes network.
                enum:
                - azure
                - calico
                type: string
              resourceGroup:
                description: ResourceGroup is the name of the Azure resource group for this AKS Cluster.
                type: string
              sshPublicKey:
                description: SSHPublicKey is a string literal containing an ssh public key base64 encoded.
                type: string
              subscriptionID:
                description: SubscriotionID is the GUID of the Azure subscription to hold this cluster.
                type: string
              version:
                description: Version defines the desired Kubernetes version.
                minLength: 2
                type: string
            required:
            - defaultPoolRef
            - location
            - resourceGroup
            - sshPublicKey
            - version
            type: object
          status:
            description: AzureManagedControlPlaneStatus defines the observed state of AzureManagedControlPlane
            properties:
              initialized:
                description: Initialized is true when the the control plane is available for initial contact. This may occur before the control plane is fully ready. In the AzureManagedControlPlane implementation, these are identical.
                type: boolean
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    cluster.x-k8s.io/v1alpha3: v1alpha3
  name: azuremanagedmachinepools.exp.infrastructure.cluster.x-k8s.io
spec:
  group: exp.infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AzureManagedMachinePool
    listKind: AzureManagedMachinePoolList
    plural: azuremanagedmachinepools
    shortNames:
    - ammp
    singular: azuremanagedmachinepool
  scope: Namespaced
  versions:
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AzureManagedMachinePool is the Schema for the azuremanagedmachinepools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AzureManagedMachinePoolSpec defines the desired state of AzureManagedMachinePool
            properties:
              osDiskSizeGB:
                description: OSDiskSizeGB is the disk size for every machine in this agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.
                format: int32
                type: integer
              providerIDList:
                description: ProviderIDList is the unique identifier as specified by the cloud provider.
                items:
                  type: string
                type: array
              sku:
                description: SKU is the size of the VMs in the node pool.
                type: string
            required:
            - sku
            type: object
          status:
            description: AzureManagedMachinePoolStatus defines the observed state of AzureManagedMachinePool
            properties:
              errorMessage:
                description: Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output.
                type: string
              errorReason:
                description: Any transient errors that occur during the reconciliation of Machines can be added as events to the Machine object and/or logged in the controller's output.
                type: string
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-leader-election-role
  namespace: capz-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - exp.cluster.x-k8s.io
  resources:
  - machinepools
  - machinepools/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - exp.infrastructure.cluster.x-k8s.io
  resources:
  - azuremachinepools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - exp.infrastructure.cluster.x-k8s.io
  resources:
  - azuremachinepools/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - exp.infrastructure.cluster.x-k8s.io
  resources:
  - azuremanagedclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - exp.infrastructure.cluster.x-k8s.io
  resources:
  - azuremanagedclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - exp.infrastructure.cluster.x-k8s.io
  resources:
  - azuremanagedcontrolplanes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - exp.infrastructure.cluster.x-k8s.io
  resources:
  - azuremanagedcontrolplanes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - exp.infrastructure.cluster.x-k8s.io
  resources:
  - azuremanagedmachinepools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - exp.infrastructure.cluster.x-k8s.io
  resources:
  - azuremanagedmachinepools/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azureclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - azuremachinetemplates
  - azuremachinetemplates/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-leader-election-rolebinding
  namespace: capz-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capz-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capz-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capz-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capz-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capz-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capz-system
---
apiVersion: v1
data:
  cloud-env: ${AZURE_ENVIRONMENT:-"AzurePublicCloud"}
kind: ConfigMap
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-manager-bootstrap-cloud-env
  namespace: capz-system
---
apiVersion: v1
data:
  arm-endpoint: ${ARM_ENDPOINT_B64}
  client-id: ${AZURE_CLIENT_ID_B64}
  client-secret: ${AZURE_CLIENT_SECRET_B64}
  subscription-id: ${AZURE_SUBSCRIPTION_ID_B64}
  tenant-id: ${AZURE_TENANT_ID_B64}
kind: Secret
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-manager-bootstrap-credentials
  namespace: capz-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-webhook-service
  namespace: capi-webhook-system
spec:
  ports:
  - port: 443
    targetPort: webhook-server
  selector:
    cluster.x-k8s.io/provider: infrastructure-azure
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    control-plane: capz-controller-manager
  name: capz-controller-manager-metrics-service
  namespace: capz-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    cluster.x-k8s.io/provider: infrastructure-azure
    control-plane: capz-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    control-plane: capz-controller-manager
  name: capz-controller-manager
  namespace: capi-webhook-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-azure
      control-plane: capz-controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-azure
        control-plane: capz-controller-manager
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --webhook-port=9443
        - --feature-gates=MachinePool=${EXP_MACHINE_POOL:=false},AKS=${EXP_AKS:=false}
        image: niachary/cluster-api-azure-controller-amd64:dev
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9440
          name: healthz
          protocol: TCP
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        volumeMounts:
        - mountPath: /etc/ssl/certs/
          name: ca-bundle
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      hostAliases:
      - hostnames:
        - "dbe-1dkphq2.microsoftdatabox.com"
        - "login.dbe-1dkphq2.microsoftdatabox.com"
        - "management.dbe-1dkphq2.microsoftdatabox.com"
        ip: "10.126.70.37"
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: ca-bundle
        name: ca-bundle
      - name: cert
        secret:
          defaultMode: 420
          secretName: capz-webhook-service-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
    control-plane: capz-controller-manager
  name: capz-controller-manager
  namespace: capz-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-azure
      control-plane: capz-controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-azure
        control-plane: capz-controller-manager
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        - --feature-gates=MachinePool=${EXP_MACHINE_POOL:=false},AKS=${EXP_AKS:=false}
        env:
        - name: AZURE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              key: cloud-env
              name: capz-manager-bootstrap-cloud-env
        - name: AZURE_SUBSCRIPTION_ID
          valueFrom:
            secretKeyRef:
              key: subscription-id
              name: capz-manager-bootstrap-credentials
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              key: tenant-id
              name: capz-manager-bootstrap-credentials
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: client-id
              name: capz-manager-bootstrap-credentials
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: capz-manager-bootstrap-credentials
        - name: ARM_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: arm-endpoint
              name: capz-manager-bootstrap-credentials
        image: niachary/cluster-api-azure-controller-amd64:dev
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        volumeMounts:
        - mountPath: /etc/ssl/certs/
          name: ca-bundle
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      hostAliases:
      - hostnames:
        - "dbe-1dkphq2.microsoftdatabox.com"
        - "login.dbe-1dkphq2.microsoftdatabox.com"
        - "management.dbe-1dkphq2.microsoftdatabox.com"
        ip: "10.126.70.37"
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: ca-bundle
        name: ca-bundle
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-serving-cert
  namespace: capi-webhook-system
spec:
  dnsNames:
  - capz-webhook-service.capi-webhook-system.svc
  - capz-webhook-service.capi-webhook-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capz-selfsigned-issuer
  secretName: capz-webhook-service-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-selfsigned-issuer
  namespace: capi-webhook-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capz-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-mutating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: capz-webhook-service
      namespace: capi-webhook-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha3-azurecluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.azurecluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - azureclusters
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: capz-webhook-service
      namespace: capi-webhook-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha3-azuremachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.azuremachine.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremachines
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: capz-webhook-service
      namespace: capi-webhook-system
      path: /mutate-exp-cluster-x-k8s-io-x-k8s-io-v1alpha3-azuremachinepool
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: mazuremachinepool.kb.io
  rules:
  - apiGroups:
    - exp.cluster.x-k8s.io.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremachinepools
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: capz-webhook-service
      namespace: capi-webhook-system
      path: /mutate-exp-infrastructure-cluster-x-k8s-io-v1alpha3-azuremanagedcontrolplane
  failurePolicy: Fail
  name: azuremanagedcontrolplane.kb.io
  rules:
  - apiGroups:
    - exp.infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremanagedcontrolplanes
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capz-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-azure
  name: capz-validating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: capz-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-azurecluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.azurecluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - azureclusters
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: capz-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha3-azuremachine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.azuremachine.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremachines
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: capz-webhook-service
      namespace: capi-webhook-system
      path: /validate-exp-cluster-x-k8s-io-x-k8s-io-v1alpha3-azuremachinepool
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: vazuremachinepool.kb.io
  rules:
  - apiGroups:
    - exp.cluster.x-k8s.io.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremachinepools
  sideEffects: None
- clientConfig:
    caBundle: Cg==
    service:
      name: capz-webhook-service
      namespace: capi-webhook-system
      path: /validate-exp-infrastructure-cluster-x-k8s-io-v1alpha3-azuremanagedcontrolplane
  failurePolicy: Fail
  name: azuremanagedcontrolplane.kb.io
  rules:
  - apiGroups:
    - exp.infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha3
    operations:
    - CREATE
    - UPDATE
    resources:
    - azuremanagedcontrolplanes
